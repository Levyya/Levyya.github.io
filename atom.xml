<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Levy&#39;s blog</title>
  
  
  <link href="https://levyya.github.io/atom.xml" rel="self"/>
  
  <link href="https://levyya.github.io/"/>
  <updated>2023-01-10T12:35:53.942Z</updated>
  <id>https://levyya.github.io/</id>
  
  <author>
    <name>Levy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo 常用命令</title>
    <link href="https://levyya.github.io/2023/01/10/hexo%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://levyya.github.io/2023/01/10/hexo%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2023-01-10T12:35:53.941Z</published>
    <updated>2023-01-10T12:35:53.942Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>Q: Hexo 图片无法加载问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image -- save</span><br></pre></td></tr></table></figure><p>TODO:</p><p><a href="https://cloud.tencent.com/developer/article/1970544">https://cloud.tencent.com/developer/article/1970544</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="博客" scheme="https://levyya.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="博客" scheme="https://levyya.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Blog" scheme="https://levyya.github.io/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>hexo图片加载问题</title>
    <link href="https://levyya.github.io/2023/01/09/hexo%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E9%97%AE%E9%A2%98/"/>
    <id>https://levyya.github.io/2023/01/09/hexo%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E9%97%AE%E9%A2%98/</id>
    <published>2023-01-09T11:50:18.000Z</published>
    <updated>2023-01-10T12:35:53.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Typora设置"><a href="#Typora设置" class="headerlink" title="Typora设置"></a>Typora设置</h2><p>修改图像保存路径为相对路径（以文件名为路径）</p><img src="/2023/01/09/hexo%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E9%97%AE%E9%A2%98/image-20230109195354353.png" class alt="image-20230109195354353"><h2 id="Hexo设置"><a href="#Hexo设置" class="headerlink" title="Hexo设置"></a>Hexo设置</h2><p>修改hexo根路径下配置文件<code>_config.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>（创建博客时，自动创建对应存放图片的文件夹）</p><h2 id="安装两个插件"><a href="#安装两个插件" class="headerlink" title="安装两个插件"></a>安装两个插件</h2><ol><li><p>hexo-asset-image</p><ol><li>使用下面命令安装</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>此时生成的html链接中，图片路径不对，需要修改该模块的index.js内容</p><ol start="2"><li>替换node_modules&#x2F;hexo-asset-image&#x2F;index.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getPosition</span>(<span class="params">str, m, i</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> str.<span class="title function_">split</span>(m, i).<span class="title function_">join</span>(m).<span class="property">length</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> version = <span class="title class_">String</span>(hexo.<span class="property">version</span>).<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.<span class="property">config</span>;</span><br><span class="line">  <span class="keyword">if</span>(config.<span class="property">post_asset_folder</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> link = data.<span class="property">permalink</span>;</span><br><span class="line"><span class="keyword">if</span>(version.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; <span class="title class_">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">   <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line"><span class="keyword">var</span> endPos = link.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.<span class="title function_">substring</span>(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.<span class="property">length</span>; i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.<span class="title function_">load</span>(data[key], &#123;</span><br><span class="line">        <span class="attr">ignoreWhitespace</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">xmlMode</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">lowerCaseTags</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">if</span> ($(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line"><span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line"><span class="keyword">var</span> src = $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>).<span class="title function_">replace</span>(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.<span class="title function_">test</span>(src) &amp;&amp;</span><br><span class="line">   !<span class="regexp">/^\s*\//</span>.<span class="title function_">test</span>(src)) &#123;</span><br><span class="line">  <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">  <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">  <span class="keyword">var</span> linkArray = link.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">elem</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">var</span> srcArray = src.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">elem</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span>(srcArray.<span class="property">length</span> &gt; <span class="number">1</span>)</span><br><span class="line">srcArray.<span class="title function_">shift</span>();</span><br><span class="line">  src = srcArray.<span class="title function_">join</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>, config.<span class="property">root</span> + link + src);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;update link as:--&gt;&quot;</span>+config.<span class="property">root</span> + link + src);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>($(<span class="variable language_">this</span>));</span><br><span class="line">&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.<span class="title function_">html</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>此时可以使用语法<code>&#123;% asset_img img_name.jpg img_description %&#125;</code> 来正常使用图片，但是用markdown语法还是无法显示。</p></li><li><p>hexo-simple-image</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>安装完这个插件后，可以使用原生markdown图片语法（<code>![]()</code>）</p></li></ol><h2 id="参考致谢"><a href="#参考致谢" class="headerlink" title="参考致谢"></a>参考致谢</h2><ol><li><a href="https://cloud.tencent.com/developer/article/1600295?from=article.detail.1702112">https://cloud.tencent.com/developer/article/1600295?from=article.detail.1702112</a></li><li><a href="https://willern.gitee.io/2019/10/14/20191014/">https://willern.gitee.io/2019/10/14/20191014/</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Typora设置&quot;&gt;&lt;a href=&quot;#Typora设置&quot; class=&quot;headerlink&quot; title=&quot;Typora设置&quot;&gt;&lt;/a&gt;Typora设置&lt;/h2&gt;&lt;p&gt;修改图像保存路径为相对路径（以文件名为路径）&lt;/p&gt;
&lt;img src=&quot;/2023/01/</summary>
      
    
    
    
    <category term="Hexo" scheme="https://levyya.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://levyya.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>图片上传测试</title>
    <link href="https://levyya.github.io/2023/01/09/%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E6%B5%8B%E8%AF%95/"/>
    <id>https://levyya.github.io/2023/01/09/%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E6%B5%8B%E8%AF%95/</id>
    <published>2023-01-09T09:07:45.000Z</published>
    <updated>2023-01-10T12:35:54.012Z</updated>
    
    <content type="html"><![CDATA[<img src="/2023/01/09/%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E6%B5%8B%E8%AF%95/image-20230109170831787.png" class title="description"><img src="/2023/01/09/%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E6%B5%8B%E8%AF%95/image-20230109170831787.png" class alt="image-20230109170831787">]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/2023/01/09/%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E6%B5%8B%E8%AF%95/image-20230109170831787.png&quot; class title=&quot;description&quot;&gt;

&lt;img s</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>github本地项目上传</title>
    <link href="https://levyya.github.io/2022/12/06/github%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0/"/>
    <id>https://levyya.github.io/2022/12/06/github%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0/</id>
    <published>2022-12-06T07:24:42.000Z</published>
    <updated>2023-01-10T12:35:53.934Z</updated>
    
    <content type="html"><![CDATA[<p>查看系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/version</span><br><span class="line"></span><br><span class="line"># 查看内核</span><br><span class="line">uname -a</span><br><span class="line"></span><br><span class="line"># 查看系统版本信息的命令</span><br><span class="line">lsb_release -a</span><br></pre></td></tr></table></figure><p>连接github</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add [origin] git@github.com:xxxx</span><br><span class="line"></span><br><span class="line">查看所有远程仓库</span><br><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>拉取文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get fetch [origin]</span><br><span class="line">git merge name/branch</span><br></pre></td></tr></table></figure><p>添加文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br></pre></td></tr></table></figure><p>第一次上传</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git push -u [origin] main</span><br><span class="line">git push --set-upstream name master</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">umount命令进行卸载</span><br><span class="line">sudo umount /dev/sda1</span><br><span class="line"></span><br><span class="line">确认这个分区的文件系统是什么</span><br><span class="line">sudo fdisk -l</span><br><span class="line"></span><br><span class="line">fsck -t ext4 /dev/sda1</span><br><span class="line">-t参数是指明文件系统是什么。/dev/sda1则是指定分区。</span><br><span class="line"></span><br><span class="line">另外一种输入法, fsck -t ext4这个命令就是在调用fsck.ext4这个命令。</span><br><span class="line">参数-f，让fsck对于没有错的档案也强行检测。这样大约可以修复一些分区的轻微的错误吧。</span><br><span class="line">fsck还有检测硬盘坏道的功能，参数是-c</span><br><span class="line">fsck.ext4 /dev/sda1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进入单用户模式</p><p>ro -&gt; rw init&#x3D;&#x2F;sysroot&#x2F;bin&#x2F;sh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># df -hT /data/</span><br><span class="line">umount /dev/sda1</span><br><span class="line">fsck.ext4  /dev/sda1</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;查看系统&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span</summary>
      
    
    
    
    <category term="计算机" scheme="https://levyya.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="github" scheme="https://levyya.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>ComplexQNN</title>
    <link href="https://levyya.github.io/2022/12/05/ComplexQNN/"/>
    <id>https://levyya.github.io/2022/12/05/ComplexQNN/</id>
    <published>2022-12-05T09:24:03.000Z</published>
    <updated>2023-01-10T12:35:52.539Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请重试！" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="0d752a93883f5e8b6f04f2c0086c44dd3ae673cd0e9cd5cd253550cf30c57469"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码！此博客暂未公布，有疑问请联系博主。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">内容加密, 请输入密码后查看！</summary>
    
    
    
    <category term="论文" scheme="https://levyya.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="论文" scheme="https://levyya.github.io/tags/%E8%AE%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>Allennlp学习</title>
    <link href="https://levyya.github.io/2022/12/05/Allennlp%E5%AD%A6%E4%B9%A0/"/>
    <id>https://levyya.github.io/2022/12/05/Allennlp%E5%AD%A6%E4%B9%A0/</id>
    <published>2022-12-05T09:20:28.000Z</published>
    <updated>2023-01-10T12:35:52.513Z</updated>
    
    <content type="html"><![CDATA[<h3 id="AllenNLP"><a href="#AllenNLP" class="headerlink" title="AllenNLP"></a><a href="https://guide.allennlp.org/common-architectures#2">AllenNLP</a></h3><p>AllenNLP是艾伦人工智能研究院开发的开源NLP平台。软件设计优秀，面对对象思想，值得阅读源码</p><p>入门学习：</p><ol><li><a href="https://www.jianshu.com/p/17abfefc1b5b">AllenNLP使用教程</a></li><li><a href="https://zhuanlan.zhihu.com/p/102324519">学习AllenNLP专栏目录</a></li></ol><p>文本处理过程学习：</p><ol><li><p>language to features</p></li><li><p>Tokenizers and TextFields</p></li><li><p>TokenIndexers</p></li><li><p>TextFieldEmbedders</p></li><li><p>Coordinating the three parts</p></li><li><p>pretrained contextualizers and embeddings</p></li><li><p>word-level modeling with a wordpiece transformer</p></li><li><p>padding and masking</p></li><li><p>Interacting with TextField outputs in your model code</p></li></ol><h4 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h4><p><code>Field</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter, defaultdict</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Dict</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> allennlp.data.fields <span class="keyword">import</span> TextField, LabelField, SequenceLabelField</span><br><span class="line"><span class="keyword">from</span> allennlp.data.token_indexers <span class="keyword">import</span> TokenIndexer, SingleIdTokenIndexer</span><br><span class="line"><span class="keyword">from</span> allennlp.data.tokenizers <span class="keyword">import</span> Token</span><br><span class="line"><span class="keyword">from</span> allennlp.data.vocabulary <span class="keyword">import</span> Vocabulary</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@DatasetReader.register(<span class="params"><span class="string">&#x27;classification-tsv&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ClassificationTsvReader</span>(<span class="title class_ inherited__">DatasetReader</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.tokenizer = SpacyTokenizer()</span><br><span class="line">        self.token_indexers = &#123;<span class="string">&#x27;tokens&#x27;</span>: SingleIdTokenIndexer()&#125;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">text_to_instance</span>(<span class="params">self, text: <span class="built_in">str</span>, label: <span class="built_in">str</span> = <span class="literal">None</span></span>) -&gt; Instance:</span><br><span class="line">        tokens = self.tokenizer.tokenize(text)</span><br><span class="line">        text_field = TextField(tokens, self.token_indexers)</span><br><span class="line">        fields = &#123;<span class="string">&#x27;text&#x27;</span>: text_field&#125;</span><br><span class="line">        <span class="keyword">if</span> label:</span><br><span class="line">            fields[<span class="string">&#x27;label&#x27;</span>] = LabelField(label)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_read</span>(<span class="params">self, file_path: <span class="built_in">str</span></span>) -&gt; Iterable[Instance]:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> lines:</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">                text, label = line.strip().split(<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">                text_field = TextField(self.tokenizer.tokenize(text),</span><br><span class="line">                                       self.token_indexers)</span><br><span class="line">                label_field = LabelField(label)</span><br><span class="line">                fields = &#123;<span class="string">&#x27;text&#x27;</span>: text_field, <span class="string">&#x27;label&#x27;</span>: label_field&#125;</span><br><span class="line">                <span class="keyword">yield</span> Instance(fields)</span><br></pre></td></tr></table></figure><h4 id="加载模型"><a href="#加载模型" class="headerlink" title="加载模型"></a>加载模型</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> allennlp.models <span class="keyword">import</span> Model</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Model.register(<span class="params"><span class="string">&#x27;simple_classifier&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SimpleClassifier</span>(<span class="title class_ inherited__">Model</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,</span></span><br><span class="line"><span class="params">                text: <span class="type">Dict</span>[<span class="built_in">str</span>, torch.Tensor],</span></span><br><span class="line"><span class="params">                label: torch.Tensor = <span class="literal">None</span></span>) -&gt; <span class="type">Dict</span>[<span class="built_in">str</span>, torch.Tensor]:</span><br><span class="line">        <span class="comment"># Shape: (batch_size, num_tokens, embedding_dim)</span></span><br><span class="line">        embedded_text = self.embedder(text)</span><br><span class="line">        <span class="comment"># Shape: (batch_size, num_tokens)</span></span><br><span class="line">        mask = util.get_text_field_mask(text)</span><br><span class="line">        <span class="comment"># Shape: (batch_size, encoding_dim)</span></span><br><span class="line">        encoded_text = self.encoder(embedded_text, mask)</span><br><span class="line">        <span class="comment"># Shape: (batch_size, num_labels)</span></span><br><span class="line">        logits = self.classifier(encoded_text)</span><br><span class="line">        <span class="comment"># Shape: (batch_size, num_labels)</span></span><br><span class="line">        probs = torch.nn.functional.softmax(logits)</span><br><span class="line">        output = &#123;<span class="string">&#x27;probs&#x27;</span>: probs&#125;</span><br><span class="line">        <span class="keyword">if</span> label <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            self.accuracy(logits, label)</span><br><span class="line">            <span class="comment"># Shape: (1,)</span></span><br><span class="line">            output[<span class="string">&#x27;loss&#x27;</span>] = torch.nn.functional.cross_entropy(logits, label)</span><br><span class="line">        <span class="keyword">return</span> output</span><br></pre></td></tr></table></figure><p>注：Model 是 torch.nn.Module 的一个子类，forward() 输出是字典</p><p>预测过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Predictor.register(<span class="params"><span class="string">&quot;sentence_classifier&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SentenceClassifierPredictor</span>(<span class="title class_ inherited__">Predictor</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">predict</span>(<span class="params">self, sentence: <span class="built_in">str</span></span>) -&gt; JsonDict:</span><br><span class="line">        <span class="comment"># This method is implemented in the base class.</span></span><br><span class="line">        <span class="keyword">return</span> self.predict_json(&#123;<span class="string">&quot;sentence&quot;</span>: sentence&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_json_to_instance</span>(<span class="params">self, json_dict: JsonDict</span>) -&gt; Instance:</span><br><span class="line">        sentence = json_dict[<span class="string">&quot;sentence&quot;</span>]</span><br><span class="line">        <span class="keyword">return</span> self._dataset_reader.text_to_instance(sentence)</span><br></pre></td></tr></table></figure><p>损失函数</p><p>查看模型预测结果 (评估标准) </p><p>保存和读取模型</p><p>正则化</p><hr><h4 id="公共结构"><a href="#公共结构" class="headerlink" title="公共结构"></a>公共结构</h4><p>Summarizing sequences</p><p><code>seq2vec</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> allennlp.modules.seq2vec_encoders <span class="keyword">import</span> (</span><br><span class="line">Seq2VecEncoder,</span><br><span class="line">    CnnEncoder,</span><br><span class="line">    LstmSeq2VecEncoder,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>Contextualizing sequences</p><p><code>seq2seq</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> allennlp.modules.seq2seq_encoders <span class="keyword">import</span> (</span><br><span class="line">Seq2SeqEncoder,</span><br><span class="line">    PassThroughEncoder,</span><br><span class="line">    LstmSeq2SeqEncoder,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>思考：为什么使用 LstmSeq2VecEncoder 而不是 torch.nn.LSTM ?</p><blockquote><p>The reasons you might want to use a <code>Seq2SeqEncoder</code> instead are three-fold: </p><p>first, it encourages you to think at a higher level about what basic operations your model is doing (am I contextualizing, summarizing, or both?). </p><p>Second, using <a href="https://guide.allennlp.org/using-config-files#1">dependency injection</a> allows you to do controlled experiments easier, if you think you might one day want to try a different contextualizer in your model. Using an abstraction that encapsulates the options you want to experiment with is a powerful way to get very easy, controlled experiments. </p><p>Lastly, having a collection of models available that are written using higher-level abstractions lets component designers easily test their developments on a wide range of models.</p></blockquote><h4 id="文本表示"><a href="#文本表示" class="headerlink" title="文本表示"></a>文本表示</h4><p>将词语转成向量的几种方法 （非上下文、上下文Contextual）</p><ul><li>GloVe or word2vec embeddings</li><li>Character CNNs</li><li>POS tag embeddings</li><li>Combination of GloVe and character CNNs</li><li>wordpieces and BERT</li></ul><p><strong>Three steps</strong> (tokenize, index, embedding) in converting language to features</p><p>Text -&gt; Tokens -&gt; Ids -&gt; Vectors</p><p>具体地</p><ol><li>Tokenizer (Text -&gt; Tokens)</li><li>TextField, TokenIndexer and Vocabulary (Tokens -&gt; Ids)</li><li>TextFieldEmbedder (Ids -&gt; Vectors)</li></ol><p>Tokenizers</p><ul><li>Characters (“AllenNLP is great” → <code>[&quot;A&quot;, &quot;l&quot;, &quot;l&quot;, &quot;e&quot;, &quot;n&quot;, &quot;N&quot;, &quot;L&quot;, &quot;P&quot;, &quot; &quot;, &quot;i&quot;, &quot;s&quot;, &quot; &quot;, &quot;g&quot;, &quot;r&quot;, &quot;e&quot;, &quot;a&quot;, &quot;t&quot;]</code>)</li><li>Wordpieces (“AllenNLP is great” → <code>[&quot;Allen&quot;, &quot;##NL&quot;, &quot;##P&quot;, &quot;is&quot;, &quot;great&quot;]</code>)</li><li>Words (“AllenNLP is great” → <code>[&quot;AllenNLP&quot;, &quot;is&quot;, &quot;great&quot;]</code>)</li></ul><p>note: Wordpieces are similar to words, but further split words into <code>subword units</code>.</p><p>常用的分词器：<code>SpacyTokenizer</code>, <code>PretrainedTransformerTokenizer</code>, <code>CharacterTokenizer</code></p><ul><li>character</li><li>wordpiece</li><li>word</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tokenizer = ...</span><br><span class="line">sentence = <span class="string">&quot;We are learning about TextFields&quot;</span></span><br><span class="line">tokens = tokenizer.tokenize(sentence)</span><br><span class="line">token_indexers = &#123;...&#125;</span><br><span class="line">text_field = TextField(tokens, token_indexers)</span><br><span class="line">...</span><br><span class="line">instance = Instance(&#123;<span class="string">&quot;sentence&quot;</span>: text_field, ...&#125;)</span><br></pre></td></tr></table></figure><h4 id="模型训练"><a href="#模型训练" class="headerlink" title="模型训练"></a><strong>模型训练</strong></h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">allennlp train \</span><br><span class="line">    my_text_classifier.jsonnet \</span><br><span class="line">    --serialization-<span class="built_in">dir</span> model-bert \</span><br><span class="line">    --include-package my_text_classifier</span><br></pre></td></tr></table></figure><p>train后面的参数指定了用哪个配置文件，-s后面的目录指定了训练日志、字典、模型等的存放位置，<code>--include-package</code>后面的参数指定了我们前面编写的python代码在哪里</p><p>train 参数</p><ul><li>-f  强制重写输出目录</li><li>–dry-run 加载数据不训练</li></ul><h4 id="模型预测"><a href="#模型预测" class="headerlink" title="模型预测"></a>模型预测</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python -m allennlp.service.server_simple \</span><br><span class="line">    --archive-<span class="built_in">path</span> /<span class="built_in">path</span>/<span class="keyword">for</span>/model/and/log/model.tar.gz \</span><br><span class="line">    --predictor text_classifier \</span><br><span class="line">    --include-package AllenFrame.classification_code \</span><br><span class="line">    --<span class="built_in">title</span> &quot;classification&quot; \</span><br><span class="line">    --field-name sentence</span><br></pre></td></tr></table></figure><p>conda update -n base conda</p><h4 id="Trick"><a href="#Trick" class="headerlink" title="Trick"></a>Trick</h4><ul><li><p>多GPU</p></li><li><p><a href="https://medium.com/optuna/hyperparameter-optimization-for-allennlp-using-optuna-54b4bfecd78b">使用Optuna进行超参数优化</a></p></li></ul><p><a href="https://blog.allenai.org/tutorial-training-on-larger-batches-with-less-memory-in-allennlp-1cd2047d92ad">使用少量内存训练大批次</a></p><ol><li>梯度累计 num_gradient_accumulation_steps</li><li>梯度检查点 gradient_checkpointing&#x3D;True</li><li>自动混合精度 use_amp</li></ol><h4 id="Jsonnet"><a href="#Jsonnet" class="headerlink" title="Jsonnet"></a>Jsonnet</h4><p><a href="https://jsonnet.org/learning/tutorial.html">tutorial</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;AllenNLP&quot;&gt;&lt;a href=&quot;#AllenNLP&quot; class=&quot;headerlink&quot; title=&quot;AllenNLP&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://guide.allennlp.org/common-architectures#2&quot;&gt;Al</summary>
      
    
    
    
    <category term="计算机" scheme="https://levyya.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="NLP" scheme="https://levyya.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/NLP/"/>
    
    
    <category term="NLP" scheme="https://levyya.github.io/tags/NLP/"/>
    
  </entry>
  
  <entry>
    <title>论文阅读--Quanthoven</title>
    <link href="https://levyya.github.io/2022/12/05/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB-Quanthoven/"/>
    <id>https://levyya.github.io/2022/12/05/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB-Quanthoven/</id>
    <published>2022-12-05T06:57:23.000Z</published>
    <updated>2023-01-10T12:35:54.249Z</updated>
    
    <content type="html"><![CDATA[<p>链接：<a href="https://arxiv.org/pdf/2111.06741.pdf">click</a></p><p>作者：</p><blockquote><p>Eduardo Reck Miranda1,2, Richie Yeung2 , Anna Pearson2 , Konstantinos Meichanetzidis2 , and Bob Coecke2 </p><p>1 ICCMR, University of Plymouth, Plymouth, UK </p><p>2Cambridge Quantum, Oxford, UK </p><p>1 <a href="mailto:&#101;&#x64;&#x75;&#97;&#114;&#100;&#111;&#46;&#x6d;&#x69;&#x72;&#x61;&#x6e;&#100;&#97;&#x40;&#x70;&#108;&#121;&#109;&#111;&#x75;&#116;&#x68;&#x2e;&#x61;&#x63;&#46;&#x75;&#x6b;">&#101;&#x64;&#x75;&#97;&#114;&#100;&#111;&#46;&#x6d;&#x69;&#x72;&#x61;&#x6e;&#100;&#97;&#x40;&#x70;&#108;&#121;&#109;&#111;&#x75;&#116;&#x68;&#x2e;&#x61;&#x63;&#46;&#x75;&#x6b;</a> </p><p>2 {richie.yeung, anna.pearson, k.mei, bob.coecke}@cambridgequantum.com</p></blockquote><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>音乐领域的人工智能(AI)已经取得了巨大的进展，特别是在音乐作曲和通过互联网获取大型数据库以实现商业化方面。我们有兴趣进一步推进这一领域，专注于作曲。与目前的“黑箱”人工智能方法相比，我们支持生成音乐系统的可解释的作曲观点。特别是，受音乐语法的激励，我们正在从分布式作曲分类(<strong>DisCoCat</strong>)建模框架(NLP)中引入方法。量子计算是一项新兴技术，很有可能在不久的将来影响音乐产业。因此，我们正在开创量子自然语言处理(QNLP)方法来开发新一代智能音乐系统。这项工作遵循了先前在量子硬件上实现DisCoCat语言模型的实验。在本章中，我们介绍了有史以来第一个概念证明——<strong>Quanthoven</strong>，它(a)证明了编程量子计算机来学习对传递不同含义的音乐进行分类是可能的，(b)说明了如何利用这种能力来开发一个系统来创作有意义的音乐片段。在讨论了我们目前对音乐作为一种通信媒介及其与自然语言的关系的理解之后，本章重点讨论了开发的技术(a)<strong>将音乐作品编码为量子电路</strong>(b)<strong>设计量子分类器</strong>。本章最后演示了用该系统创建的组合。</p><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在本章中，我们介绍了有史以来第一个概念证明——<strong>Quanthoven</strong>，它(a)证明了编程量子计算机学习对传递不同含义的音乐进行分类是可能的，(b)说明了如何利用这种能力开发能够创作出有意义音乐的人工智能系统。本章其余部分的结构如下:</p><p>第二部分探讨了我们目前对音乐作为一种交流媒介及其与自然语言的关系的理解，这是我们研究的动力所在。</p><p>第3节介绍了我们在音乐和算法作曲的计算建模方法方面的工作。</p><p>第4节介绍了<strong>量子计算的基础知识</strong>，刚好可以跟上本章中讨论的量子分类器(即机器学习算法)的技术方面。</p><p>第5节介绍了<strong>分布式组合范畴建模</strong>(Distributional composition Categorical, DisCoCat)，该模型利用范畴理论将自然语言和量子力学统一起来。它还展示了DisCoCat如何模拟音乐。</p><p>•第6节描述了我们为这个项目开发的DisCoCat音乐模型，包括使用定制语法生成音乐片段并转换为量子电路的过程。阐述了机器学习算法和训练方法。</p><p>第7节说明如何利用分类的结果生成两类音乐作品。这一章以最后的评语结束。一些附录提供了补充信息。</p><p>讨论：</p><p>音乐能否传递信息？</p><p>观点：小调和弦传递悲伤，大调和弦传递快乐</p><p>音乐和语言的关系：</p><p>音乐和语言具有相似的内部结构，音乐有助于第二语言的学习，母语发音区分持续时间的要比发音不区分持续时间的在掌握音乐节奏中做的更好</p><p>音乐语法：</p><blockquote><p>我们根据自己的思维模式来分析和解释听觉流。我们不妨把这种结构称为音乐语法。我们给印象的标签就是意义。</p></blockquote><p>现有方法：</p><ol><li><p>人工智能</p><p>模拟现有的特定风格的音乐</p></li><li><p>算法方法</p><p>将看起来非音乐现象的数据转化为音乐，可以得到比较新奇的音乐</p></li></ol><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h2 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h2><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;链接：&lt;a href=&quot;https://arxiv.org/pdf/2111.06741.pdf&quot;&gt;click&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Eduardo Reck Miranda1,2, Richie Yeung2 , Anna </summary>
      
    
    
    
    <category term="论文阅读" scheme="https://levyya.github.io/categories/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="论文" scheme="https://levyya.github.io/tags/%E8%AE%BA%E6%96%87/"/>
    
    <category term="Quantum" scheme="https://levyya.github.io/tags/Quantum/"/>
    
  </entry>
  
  <entry>
    <title>云原生</title>
    <link href="https://levyya.github.io/2022/12/05/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    <id>https://levyya.github.io/2022/12/05/%E4%BA%91%E5%8E%9F%E7%94%9F/</id>
    <published>2022-12-05T01:35:48.000Z</published>
    <updated>2023-01-10T12:35:53.989Z</updated>
    
    <content type="html"><![CDATA[<img src="/2022/12/05/%E4%BA%91%E5%8E%9F%E7%94%9F/cloud-native-for-dev-ops-1.png" class alt="1"><p>三款云原生平台级产品</p><ol><li>Rancher</li><li>KubeSphere</li><li>Rainbond</li></ol><p>使用要求：</p><ul><li>微服务架构</li><li>kubernetes</li><li>容器</li></ul><p>技术概念</p><p>DN（网络自动化管理）、SDS（存储自动化管理）、Helm（复杂应用交付自动化）、Service Mesh（无侵入扩展服务治理能力）、Monitoring（监控自动化）、Logging（日志自动化）、Tracing（性能分析自动化）、Chaos engineering（容错自动化）、Gateway（网关自动化）、SPIFFE （应用访问安全自动化）</p><p>Workload、Pod、Service、Ingress、ConfigMap、PV</p><p>云原生实现的关键问题</p><ol><li><p>云原生落地的难点在使用</p></li><li><p>业务跟运维能力解耦，跟微服务框架解耦</p></li><li><p>根据不同客户类型，自定义交付流程和自动化交付</p></li></ol><p>参考</p><p><a href="http://docs.kubernetes.org.cn/">kubernetes中文文档</a></p><p><a href="https://www.kubernetes.org.cn/">kubernetes中文社区</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/2022/12/05/%E4%BA%91%E5%8E%9F%E7%94%9F/cloud-native-for-dev-ops-1.png&quot; class alt=&quot;1&quot;&gt;

&lt;p&gt;三款云原生平台级产品&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Rancher&lt;/li&gt;
&lt;l</summary>
      
    
    
    
    <category term="计算机" scheme="https://levyya.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="云原生" scheme="https://levyya.github.io/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>Docker</title>
    <link href="https://levyya.github.io/2022/12/04/Docker/"/>
    <id>https://levyya.github.io/2022/12/04/Docker/</id>
    <published>2022-12-04T08:58:29.000Z</published>
    <updated>2023-01-10T12:35:53.714Z</updated>
    
    <content type="html"><![CDATA[<p>Docker 可视化</p><ul><li>Docker GUI</li><li>DockStation</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Docker 可视化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Docker GUI&lt;/li&gt;
&lt;li&gt;DockStation&lt;/li&gt;
&lt;/ul&gt;
</summary>
      
    
    
    
    
    <category term="Docker" scheme="https://levyya.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>论文阅读模板</title>
    <link href="https://levyya.github.io/2022/12/04/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E6%A8%A1%E6%9D%BF/"/>
    <id>https://levyya.github.io/2022/12/04/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E6%A8%A1%E6%9D%BF/</id>
    <published>2022-12-04T06:33:52.000Z</published>
    <updated>2023-01-10T12:35:54.251Z</updated>
    
    <content type="html"><![CDATA[<p>链接：<a href="https://arxiv.org/abs/2205.05625">click</a></p><p>作者：</p><blockquote><p>Guangxi Li, Xuanqiang Zhao, and Xin Wang</p><p>百度</p></blockquote><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h2 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h2><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;链接：&lt;a href=&quot;https://arxiv.org/abs/2205.05625&quot;&gt;click&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Guangxi Li, Xuanqiang Zhao, and Xin Wang&lt;/p&gt;
&lt;p&gt;百度</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>论文阅读--2020 A hybrid classical-quantum workflow for natural language processing</title>
    <link href="https://levyya.github.io/2022/12/04/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB-2020-A-hybrid-classical-quantum-workflow-for-natural-language-processing/"/>
    <id>https://levyya.github.io/2022/12/04/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB-2020-A-hybrid-classical-quantum-workflow-for-natural-language-processing/</id>
    <published>2022-12-04T06:33:27.000Z</published>
    <updated>2023-01-10T12:35:54.247Z</updated>
    
    <content type="html"><![CDATA[<p>链接：<a href="https://iopscience.iop.org/article/10.1088/2632-2153/abbd2e/pdf">click</a></p><p>作者：</p><blockquote><p>Lee J O’Riordan 1,2, Myles Doyle 1,2, Fabio Baruffa 3 and Venkatesh Kannan1,2 </p><p>1 Irish Centre for High-End Computing, Dublin, Ireland </p><p>2 National University of Ireland, Galway, Ireland </p><p>3 Intel Deutschland GmbH, Feldkirchen, Germany</p></blockquote><p>Lee J O’Riordan: <a href="https://github.com/mlxd">github</a>, Jet, QNLP, pennylane-lightning-gpu</p><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>自然语言处理(NLP)问题在经典计算中无处不在，它们通常需要大量的计算资源来推断句子的含义。随着量子计算硬件和模拟器的出现，在这些平台上研究这些问题的方法是值得的。在这篇文章中，我们演示了使用量子计算模型来执行NLP任务，其中我们表示语料库的含义，并在给定结构的句子之间执行比较。我们开发了一种混合工作流，用于表示使用量子电路模型进行编码、处理和解码的小型和大型语料库数据集。此外，我们提供了显示该方法有效性的结果，并将我们开发的工具包作为一个开放的软件套件发布。</p><p>sum:</p><p>混合经典量子，使用量子线路模型编码nlp数据集</p><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><blockquote><p>本文研究了将语料库映射到量子电路模型的过程，并利用语料库的编码意义空间来表示句子的基本意义。通过这种表示，我们可以检查句子到编码空间的映射，并对重叠意义空间的句子进行比较。我们遵循一种受discocat启发的形式主义，基于给定的成分句结构定义句子的意义和相似度，并使用标记邻接的分布方法确定句子标记之间的关系。</p><p>本文将阐述如下。第2节将介绍NLP，量子模型在NLP中的应用，并讨论<strong>量子电路模型的编码策略</strong>。第3节将讨论启用文本数据的量子辅助编码和处理所需的制备方法。第4节将演示使用我们的<strong>量子NLP软件工具包</strong>[11]在英特尔量子模拟器(IQS)[12]上提出的方法。为此，我们展示了方法，并比较了不同大小和复杂性的语料库的结果。最后，我们在第5节中进行总结。</p></blockquote><p>重点：编码策略，开发的工具包</p><hr><blockquote><p>虽然这种方法在复杂句子结构的准确性和泛化方面有优势，但状态准备是我们必须考虑的事情。鉴于目前缺乏qRAM，指定的访问边界没有实现[7]，因此值得考虑将状态准备作为过程的一部分。确保一种高效的准备方法也很重要，这将使处理规模能够与传统的高性能计算NLP方法相匹敌。因此，我们的目标是提供一个简化的模型、框架和混合工作流，以使用量子电路模型表示文本数据。我们从DisCoCat模型中获得灵感，将数据预处理为在量子计算机上容易实现的结构。我们考虑<strong>“名-动词-名词”形式</strong>的简单句来证明这种方法。所有的量子电路模拟和预处理都由我们的量子NLP工具包(QNLP)执行，它位于英特尔量子模拟器(以前的qHiPSTER)之上，以处理分布式高性能量子电路工作负载[12,26]。我们将QNLP工具包作为一个开源(Apache 2.0)项目发布，并在GitHub[11]上提供了它。</p></blockquote><p>论文基于DisCoCat，将“名-动词-名词”结构的句子预处理为在量子计算机上容易实现的结构，通过因特尔的量子模拟器实现，开源代码QNLP。</p><p><a href="https://github.com/ICHEC/QNLP">github</a></p><p>关于DisCoCat</p><blockquote><p>一种旨在克服传统自然语言处理方法(如词袋模型)所提供的歧义的方法是分类分布-组合(DisCoCat)模型[4,5]。这种方法结合了语义结构，根据范畴理论确定的一组规则，通过对单个组成词的自然张量来构建句子。这些构成句子结构的规则集在很大程度上是基于前组语法的框架[25]。DisCoCat方法提供了一种在这些句子中使用标记关系的句子语法结构的方法。在文本中出现较近的单词更有可能是相关的，句子结构可以使用预分组方法确定。这些方法可以很容易地用图解形式表示，并允许对量子态表示[6]的自然扩展。这种图解形式，类似于一个张量网络，允许计算其他句子之间的相似性。这种相似性度量假设一个表示给定语料库结构的编码量子状态，以及一个适当准备的测试状态进行比较。这暗示了一个张量-收缩方法来执行评估。</p></blockquote><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>预处理过程：</p><p>a) 合适的语法类型，去除停用词和问题字符（如非字母数字）</p><p>b) 与处理过的数据必须能够是可处理的（内存限制）</p><p>c) 数据和量子线路表示需要是一个双射 (bijective mapping)</p><h2 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h2><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>这是一项较早的工作（相比于剑桥的工作），论文中对语言的编码是值得关注的重点。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;链接：&lt;a href=&quot;https://iopscience.iop.org/article/10.1088/2632-2153/abbd2e/pdf&quot;&gt;click&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lee J O’Riordan 1,2</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>QNLP--MindQuantum</title>
    <link href="https://levyya.github.io/2022/11/14/QNLP-MindQuantum/"/>
    <id>https://levyya.github.io/2022/11/14/QNLP-MindQuantum/</id>
    <published>2022-11-14T13:28:06.000Z</published>
    <updated>2023-01-10T12:35:15.974Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.mindspore.cn/mindquantum/docs/zh-CN/master/index.html">API</a></p><p><a href="https://www.mindspore.cn/mindquantum/docs/zh-CN/master/qnn_for_nlp.html">量子神经网络在自然语言处理中的应用</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.mindspore.cn/mindquantum/docs/zh-CN/master/index.html&quot;&gt;API&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mindspore.cn/mindquantum/</summary>
      
    
    
    
    <category term="Quantum" scheme="https://levyya.github.io/categories/Quantum/"/>
    
    
    <category term="NLP" scheme="https://levyya.github.io/tags/NLP/"/>
    
    <category term="Quantum" scheme="https://levyya.github.io/tags/Quantum/"/>
    
  </entry>
  
  <entry>
    <title>Natural language processing</title>
    <link href="https://levyya.github.io/2022/11/14/Natural-language-processing/"/>
    <id>https://levyya.github.io/2022/11/14/Natural-language-processing/</id>
    <published>2022-11-14T13:01:50.000Z</published>
    <updated>2023-01-10T12:35:53.872Z</updated>
    
    <content type="html"><![CDATA[<h2 id="NLP相关框架"><a href="#NLP相关框架" class="headerlink" title="NLP相关框架"></a>NLP相关框架</h2><p><strong>PyTorch Lightning</strong></p><p><strong>GluoNLP</strong></p><p>Gluonnlp在一些处理更方便，但缺乏灵活，功能更少</p><h3 id="AllenNLP"><a href="#AllenNLP" class="headerlink" title="AllenNLP"></a><a href="https://guide.allennlp.org/common-architectures#2">AllenNLP</a></h3><p>见另一篇博客 <a href>allennlp学习</a></p><h3 id="EasyNLP"><a href="#EasyNLP" class="headerlink" title="EasyNLP"></a>EasyNLP</h3><p>阿里NLP团队</p><p><a href="https://www.yuque.com/easyx/easynlp">EasyNLP中文文档</a></p><p>面向NLP的深度迁移学习框架PAI-EasyTransfer，ModelZoo，AppZoo，知识蒸馏（DistilBERT，BERT-PKD，TinyBERT），小样本学习，关键词提取，敏感词识别，数据增强</p><p>知识注入预训练，DKPLM，KGBERT</p><img src="/2022/11/14/Natural-language-processing/1645592870696-eb65aeaa-266f-4e2b-9191-732fa98c92ed.png" class alt="image.png"><img src="/2022/11/14/Natural-language-processing/1652148055019-b9abde42-2513-4098-82b0-1098319f1f32.png" class alt="image.png"><p>Demo：MRPC文本匹配，双句文本分类</p><p>小论文小论文小论文</p><ul><li>总共就这么几章，几天就写完了</li><li>画图、做实验、写论文</li></ul><p>选调+省考</p><ul><li>申论</li><li>行测</li></ul><p>毕业论文</p><ul><li>第三章<ul><li>量子启发式</li></ul></li><li>第四章<ul><li>量子NLP</li></ul></li></ul><p><a href="https://github.com/alibaba/EasyNLP/tree/master/benchmarks/clue">CLUE_baseline</a></p><h3 id="PaddleNLP"><a href="#PaddleNLP" class="headerlink" title="PaddleNLP"></a>PaddleNLP</h3><p>百度NLP团队</p><p>pipelines 可以部署成Service</p><h2 id="方法流程"><a href="#方法流程" class="headerlink" title="方法流程"></a>方法流程</h2><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>提示学习、EDA数据增强、对比学习RDrop、集成学习、Grid Search</p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>阶段一：领域预训练</p><p>阶段二：提示学习</p><p>挑选与任务适配的最优提示词，使用AutoPrompt框架</p><p>阶段三：数据增强 &amp; 集成学习</p><p>数据策略和模型策略，采用多种数据增强策略，自动扩充标注数据，最终模型的结果采用多个模型的输出结果集成得到</p><p><strong>领域预训练</strong></p><p>百度NLP预训练语言模型文心ERNIE1.0-Large-CW</p><h2 id="数据集"><a href="#数据集" class="headerlink" title="数据集"></a>数据集</h2><p><a href="https://huggingface.co/datasets/severo/glue">GLUE</a></p><p>CLUE（Chinese Language Understanding Evaluation）：中文语言理解权威测评榜单</p><p>FewCLUE：中文小样本学习测评子榜</p><h2 id="研究方向"><a href="#研究方向" class="headerlink" title="研究方向"></a>研究方向</h2><h3 id="预训练模型"><a href="#预训练模型" class="headerlink" title="预训练模型"></a>预训练模型</h3><ul><li>Transformer：多头自注意力机制</li><li>预训练 + 微调</li></ul><table><thead><tr><th align="center">Model</th><th align="center">Name</th><th align="center">Size</th></tr></thead><tbody><tr><td align="center">BERT</td><td align="center">Bert-uncased-large</td><td align="center">xxxM</td></tr><tr><td align="center">RoBERTa</td><td align="center">roberta-wwm-ex</td><td align="center"></td></tr><tr><td align="center">ERNIE</td><td align="center">ERNIE-3.0</td><td align="center"></td></tr><tr><td align="center">QPFE-ERNIE</td><td align="center">Quantum-inspred model, ERNIE</td><td align="center"></td></tr><tr><td align="center">ComplexQuantumModel</td><td align="center">ComplexNN, Quantum-inspired, Pretraining</td><td align="center"></td></tr></tbody></table><h3 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h3><table><thead><tr><th align="center">Method</th><th align="center">Description</th><th align="center">State</th></tr></thead><tbody><tr><td align="center">预训练</td><td align="center">pretrain model with wiki or other corpus</td><td align="center">√</td></tr><tr><td align="center">微调</td><td align="center">fine-tune the pretrained model on downstream tasks</td><td align="center">√</td></tr><tr><td align="center">集成学习</td><td align="center">Boosting, Bagging</td><td align="center">√</td></tr><tr><td align="center">提示学习</td><td align="center">prompt learning</td><td align="center">×</td></tr><tr><td align="center">蒸馏</td><td align="center">distillation</td><td align="center">√</td></tr><tr><td align="center">数据增强</td><td align="center">EDA, data tricks</td><td align="center">√</td></tr></tbody></table><img src="/2022/11/14/Natural-language-processing/promptclue.png" class alt="img"><table><thead><tr><th>量子NLP</th><th>works</th></tr></thead><tbody><tr><td>量子启发式</td><td></td></tr><tr><td></td><td>Complex Embedding: NNQLM, CE-Mix, CNM, QWN</td></tr><tr><td></td><td>Complex-valued encoding: ComplexNN</td></tr><tr><td>量子机器学习</td><td></td></tr><tr><td></td><td>参数化量子线路学习：华为MindQuantum</td></tr><tr><td>近世代数</td><td>DisCoCat, lambeq (Cambridge)</td></tr></tbody></table><ol><li>华为参数化量子线路学习</li><li>lambeq，剑桥，文本到string，string到量子线路，参数化线路学习</li></ol><h3 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h3><p><a href="https://gluebenchmark.com/tasks">GLUE</a>：英文语言模型评估</p><p><a href="https://www.cluebenchmarks.com/">CLUE</a>：中文语言模型评估</p><p><a href="https://super.gluebenchmark.com/leaderboard">SuperGLUE</a></p><h4 id="GLUE"><a href="#GLUE" class="headerlink" title="GLUE"></a>GLUE</h4><table><thead><tr><th>Sentence</th><th align="center">TASK</th><th>Description</th><th>Metrics</th></tr></thead><tbody><tr><td>单句</td><td align="center">COLA</td><td>分类任务，是否合乎语法</td><td>Matthews corr.</td></tr><tr><td></td><td align="center">SST-2</td><td>情感分类</td><td>acc.</td></tr><tr><td>句子对</td><td align="center">MRPC</td><td>paraphrase</td><td>acc. &#x2F; F1</td></tr><tr><td></td><td align="center">STS-B</td><td>句子相似度</td><td>Pearson &#x2F; Spearman corr.</td></tr><tr><td></td><td align="center">QQP</td><td>paraphrase</td><td>acc. &#x2F; F1</td></tr><tr><td></td><td align="center">MNLI</td><td>NLI</td><td>mathed acc. &#x2F; mismatched acc.</td></tr><tr><td></td><td align="center">QNLI</td><td>QA&#x2F;NLI</td><td>acc.</td></tr><tr><td></td><td align="center">RTE</td><td>NLI</td><td>acc.</td></tr><tr><td></td><td align="center">WNLI</td><td>coreference&#x2F;NLI</td><td>acc.</td></tr></tbody></table><h4 id="CLUE"><a href="#CLUE" class="headerlink" title="CLUE"></a>CLUE</h4><table><thead><tr><th>任务</th><th>描述</th><th>评估指标</th></tr></thead><tbody><tr><td>AFQMC</td><td>语义相似度</td><td>acc.</td></tr><tr><td>TNEWS</td><td>文本分类</td><td>acc.</td></tr><tr><td>IFLYTEK</td><td>长文本分类</td><td>acc.</td></tr><tr><td>CMNLI</td><td>自然语言推理</td><td>acc.</td></tr><tr><td>OCNLI</td><td>自然语言推理</td><td>acc.</td></tr><tr><td>CLUEWSC2020</td><td>代词消歧</td><td>acc.</td></tr><tr><td>CSL</td><td>论文关键词识别</td><td>acc.</td></tr><tr><td>CHID</td><td>成语阅读理解填空</td><td>acc.</td></tr><tr><td>$C^3$</td><td>中文多选阅读理解</td><td>acc.</td></tr><tr><td>CMRC2018</td><td>阅读理解</td><td>EM&#x2F;F1</td></tr></tbody></table><p> 任务使用的评估指标均是 Accuracy。CMRC2018（阅读理解） 的评估指标是 EM (Exact Match)&#x2F;F1，计算每个模型效果的平均值时，取 EM 为最终指标。</p><p>其中前 7 项属于分类任务，后面 3 项属于阅读理解任务</p><p><a href="https://github.com/CLUEbenchmark/CLUE/tree/master/baselines/paddlenlp">Baseline</a></p><p><a href="https://mp.weixin.qq.com/s/omHwSIIHqJsMzrYdurDOFg">Paddle处理FewCLUE</a></p><h3 id="My-work——ComplexQDNN"><a href="#My-work——ComplexQDNN" class="headerlink" title="My work——ComplexQDNN"></a>My work——ComplexQDNN</h3><div style="font-family:verdana;font-size: 22px"> ComplexQNN: A Complex-valued Quantum-inspired Language Model </div><h5 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h5><p>问题：量子启发式模型现有方法都是基于振幅相位嵌入，将词语映射到希尔伯特空间中，而量子计算理论中，量子态对应的向量都是复数值的，所以需要使用欧拉公式进行转换。</p><p>想法：复数值神经网络已经有一些研究，但是其实际应用还很少，更不必说在自然语言的下游任务如情感分析和语言模型等。实际上，复数值神经网络在表示能力上要优于实数值神经网络，适合与复杂的自然语言建模。另一方面，量子启发式模型是定义在希尔伯特空间下的，它同样是一个复数空间，因此可以很自然地基于复数值神经网络构建量子启发式模型。于是我们提出了一种新的模型ComplexQNN，它可以在实部和虚部嵌入异构的语义信息，并且XX，从而XX。</p><p>实验：我们首先在情感分类数据集上进行了实验，并和基线模型对比，实验结果现实ComplexQNN能够很好地完成任务，并且相比于XX模型有xx%的精度提升。</p><h5 id="第一章引言"><a href="#第一章引言" class="headerlink" title="第一章引言"></a>第一章引言</h5><ol><li><p>简单的背景介绍，抛出问题：</p><ol><li>NLP受益于深度学习的发展，在很多的领域取得重大进展。</li><li>目前使用的主要技术是基于transformer构建的预训练语言模型，通过微调策略适应不同的下游任务。</li><li>研究方向开始朝向更大的数据集，更大的模型方面发展，虽然计算能力逐年提升，但仍然会感到束手束脚。</li><li>有没有新的计算模型，能够更加合理建模，节约资源同时学习更多知识。</li></ol></li><li><p>现有的解决思路，存在的不足：</p><ol><li>量子计算是一种全新的计算理论，已经有工作证明在一些任务上，量子计算机具有指数级计算复杂度加速优势。</li><li>当前也有一些工作言语量子计算理论对自然语言建模，如剑桥的lambeq工作。</li><li>受限于NISQ时代，处理的文本规模很小，只能处理包含10几个词的100条句子规模的数据集任务。</li></ol></li><li><p>基于什么启示，提出我的方案，我做了哪些工作：</p><ol><li>试图从量子计算理论中受益还有另外一种解决思路，构建量子启发式模型。</li><li>量子启发式模型是基于量子计算理论的数学框架对自然语言进行建模，将自然语言类比于量子系统，同时使用经典神经网络模型去模拟这一过程。</li><li>当前有一些量子启发式模型如NNQLM，ICWE等，这些模型都是通过振幅相位编码模拟量子态的构建。</li><li>实际上，量子态定义在希尔伯特空间上，其每一个维度都是复数值。</li><li>因此，为了更加合理地构建量子启发式模型，以及丰富模型的表达能力，我们提出了复数值量子启发式模型（ComplexQNN）。</li><li>我们基于提出的模型进行了广泛实验，使用多个情感分类数据集对模型进行测评，并和经典的模型进行比较，证明了我们模型的有效性。</li></ol></li><li><p>总结我的方法，归纳为3点：</p><ol><li>综上所述，我们总结了这项工作的内容，包括以下内容：</li><li>基于复数值神经网络构造了一种全新的，更加符合量子计算理论的量子启发式模型，即ComplexQNN。</li><li>上述模型是一个理论框架，在实际建模中，可以根据真实场景自适应地调整模型结构，这部分内容将会在第三章具体展开。</li><li>在情感分类的实验结果证明，我们的模型具有良好的效果。</li></ol></li></ol><h5 id="第二章相关工作"><a href="#第二章相关工作" class="headerlink" title="第二章相关工作"></a><strong>第二章相关工作</strong></h5><ol><li>量子启发式模型</li><li>复数值神经网络</li><li>我们的想法</li></ol><p><strong>ComplexQNN</strong></p><p>量子启发式模型：Embedder, Encoder, Classifier</p><ul><li><input checked disabled type="checkbox"> ComplexQNN整体模型<ul><li><input disabled type="checkbox"> 画一张整体模型图</li><li><input checked disabled type="checkbox"> 预处理过程：分词器、实例化、批处理</li><li><input disabled type="checkbox"> Embedder:  BagOfWord, SingleId</li><li><input disabled type="checkbox"> Encoder: </li><li><input disabled type="checkbox"> Classifer: nn.Linear</li></ul></li><li><input checked disabled type="checkbox"> ComplexQNN的每一个模块介绍<ul><li><input disabled type="checkbox"> ComplexEmbedder: real_embedder &amp; imag_embedder</li><li><input disabled type="checkbox"> QuantumEncoder: Projection &amp; Evolution</li><li><input disabled type="checkbox"> Measure: tr(PV)</li></ul></li><li><input checked disabled type="checkbox"> 训练细节<ul><li><input checked disabled type="checkbox"> 硬件信息：2080ti GPU 12G</li><li><input checked disabled type="checkbox"> 环境：py3.8, torch&#x3D;1.12.1, allennlp&#x3D;2.10.1</li><li><input checked disabled type="checkbox"> epoch: [3 - 30]</li><li><input checked disabled type="checkbox"> batch: [16, 32, 64]</li><li><input checked disabled type="checkbox"> optimizer：Adam, Adamw</li><li><input checked disabled type="checkbox"> loss: cross_entropy</li><li><input checked disabled type="checkbox"> metric: accuracy, precision,</li></ul></li></ul><h5 id="第三章-正文"><a href="#第三章-正文" class="headerlink" title="第三章 正文"></a>第三章 正文</h5><p>复数值量子启发式神经网络（ComplexQNN）是基于复数值神经网络和量子计算理论构建的语言模型，用于自然语言处理的下游任务，下面将从模型整体架构、模型具体模块的构造、模型适用的场景三个方面介绍该模型。</p><p>首先是ComplexQNN的模型整体架构，图片1描述了模型的整体架构，它包含三个模块：复数词嵌入、量子编码器、分类器。此外，我们还可以从 <strong>图片1</strong> 中了解到ComplexQNN处理文本的整个流程：1）预处理过程：文本首先通过预处理过程（大小写转换、分词、词索引映射、填充和截断）得到令牌序列（token），另一方面，为了屏蔽掉填充序列带来了额外令牌序列，还需要构建由0和1组成的掩码序列（mask），令牌序列和掩码序列即为ComplexQNN的输入数据；2）复数词嵌入：复数词嵌入层的作用是将词语对应的令牌号（整数）映射到n维复数向量空间中，其对应于量子理算中的量子态构建过程，每一个词语从离散空间映射到高维希尔伯特空间下，对应一个列向量（即右矢）。3）量子编码器：前面通过嵌入层得到词语的量子态表示，但是整个句子仍是由单个离散的词语组成，在进行量子态演化编码信息之前，需要先得到句子的量子态表示，具体地通过公式（），我们得到了句子的密度矩阵表示。下面要模拟量子系统的演化，量子计算理论中量子态和密度矩阵的演化是利用量子门实现的，量子门对应的是一个酉方阵，维度对应其操作的量子比特数（满足$m&#x3D;2^n$。在复数值神经网络中，我们要模拟这一过程，可以通过复数值线性层以及复数值循环神经网络（注：严格意义上讲，线性层和循环神经网络通过指定输入输出的维度来保证维度的不变性，不能保证该操作是可逆的，要满足酉操作，需要使用量子计算机来构建网络层，这也是我们模型被称为量子启发式模型的原因）；4）分类器：分类器的作用是利用编码后的信息输出预测分类的结果，此处构造分类器有两种思路，其一是基于量子计算理论通过测量直接输出预测结果，其二是基于前面的量子态，[batch, emb_dim, emb_dim] 使用XXX，再使用Linear输出预测结果。两种思路的区别在于第一种遵守量子计算理论的特性，第二种是将量子态表示看作是编码的特征，通过经典神经网络的思路进行分类预测。</p><p>其次是ComplexQNN的每个模块的具体构建过程，第一个是复数词嵌入（ComplexEmbedder）。我们都知道，经典的词嵌入层按照分词的级别可分为字符级、wordpiece级以及词语级，常用的实现分为上下文和非上下文词嵌入，word2vec 和 GloVe 是两种非常经典的非上下文词向量，上下文词嵌入是基于预训练模型思路，通过微调得到数据集相关的上下文词向量。我们的模型中构建了一种复数词嵌入，公式（$[w_1, …, w_i, …, w_n] &#x3D; [r_1, …, r_i, …, r_n] + 1j \times [i_1, …, i_i, …, i_n]$）展示了词嵌入的过程，它由两部分组成，实部词嵌入和虚部词嵌入，输入令牌序列，将输出该序列对应的复数词向量。具体地，我们考虑了不同的方案来构造复数词嵌入层，（1）使用不同的预训练模型作为实部和虚部的嵌入层，如实部使用BERT，虚部使用RoBERTa，这样就可以将不同的信息编码到量子态中，在后面的模块中基于复数词嵌入的输出进行进一步处理。</p><p>第二个模块是量子编码层，量子编码层需要满足一些条件，维度是$2^n$且输入输出维度不变。前面我们提到过，进行编码前，需要先得到句子的密度矩阵表示，公式（$M &#x3D; \sum_i^n|w_i\rangle \langle w_i|$）展示了计算密度矩阵的过程。我们通过以下基本模块来构建我们的编码层：复数值全连接层、复数值循环神经网络、复数值批正则化。我们构建了两种用于编码的中间模块层：深度编码、循环神经网络编码（基于ComplexGRU），<strong>图（）</strong>和<strong>图（）</strong>是我们构造的两个中间模块层。</p><p>第三个模块是分类器。上面提到我们有两种思路去构造分类器，我们先描述第一种。第一种是利用量子计算理论的测量方法，具体是通过公式（$p &#x3D; tr(PV)$）来实现，其中p是预测的概率，tr是求矩阵的迹，P是投影算子$|p\rangle$对应的密度矩阵，V是句子表示的密度矩阵，投影算子是随机初始化的非零向量，通过公式（）我们可以进行文本二分类。显然，要进行多分类的化，需要一组投影向量基，后面实验中涉及了多分类，所以根据分类结果的种类数确定基向量的个数。最终的分类结果是取预测概率最大的那个作为最终的预测结果。另一种分类的思路是按照经典深度学习方法，构建循环神经网络或者利用卷积神经网络进行池化操作，最后通过线性层将结果映射到分类种类数量的向量维度下，并取结果最大值对应的下标作为预测结果。</p><p><strong>TODO</strong></p><p><strong>图：整体模型图，量子编码层（基于复数值全连接层，基于GRU）</strong></p><h5 id="第四章-实验"><a href="#第四章-实验" class="headerlink" title="第四章 实验"></a>第四章 实验</h5><p>情感分析是自然语言处理中的常见任务，任务要求预测给定的句子的情感极性。实验使用了五个常见的数据级如<strong>表（）</strong>所示。为了衡量ComplexQNN模型的性能，我们使用TextCNN、TextGRU、BERT、RoBERTa作为对比模型。具体地实验结果如<strong>表（）</strong>所示。</p><p>实验结果分析：可以看到ComplexQNN相比于流行的预训练模型并不落于下风，在XX数据集上都有更好的预测精度。另外，我们使用了不同的预训练模型以及相同模型的不同尺寸构建ComplexQNN（GloVe, BERT, RoBERTa；BERT-tiny, BERT-base, BERT-large），实验结果如<strong>图（）</strong>所示。</p><p>消融实验：为了展示量子启发式模型以及复数值神经网络的有效性，我们构建了消融实验。我们构建了三个模型：（1）量子启发式模型；（2）复数值神经网络模型；（3）复数值量子启发式模型。<strong>表（）</strong>显示，复数值量子启发式模型具有显著的优势。</p><p><strong>TODO</strong></p><p><strong>表：情感分类数据集描述，对比实验表（总），消融实验表</strong></p><p><strong>图：对比实验结果图</strong></p><h4 id="实验结果（2022-11-28-…）"><a href="#实验结果（2022-11-28-…）" class="headerlink" title="实验结果（2022.11.28-…）"></a>实验结果（2022.11.28-…）</h4><table><thead><tr><th align="left">model</th><th align="right">CR</th><th align="right">MPQA</th><th align="right">MR</th><th align="right">SST</th><th align="right">SUBJ</th></tr></thead><tbody><tr><td align="left">TextCNN</td><td align="right">acc: <strong>78.8</strong><br> prec: 70.2 <br>recall: 72.3<br> f1: 71.2<br>loss: 0.622</td><td align="right">acc: <strong>74.4</strong><br> prec: 72.4<br>recall: 78.8<br> f1: 75.5<br> loss: 0.638</td><td align="right">acc: <strong>75.0</strong><br> prec: 73.2<br> recall: 78.8<br> f1: 75.9<br> loss: 0.527</td><td align="right">acc: <strong>81.4</strong><br> prec: 81.5<br> recall: 80.3<br> f1: 80.9<br> loss: 0.493</td><td align="right">acc: <strong>90.3</strong><br> prec: 92.0<br> recall: 88.3<br> f1: 90.1<br> loss: 0.379</td></tr><tr><td align="left">ComplexTextCNN</td><td align="right"></td><td align="right"></td><td align="right"></td><td align="right"></td><td align="right"></td></tr><tr><td align="left">GRU</td><td align="right">acc: <strong>80.1</strong><br> prec: 75.7 <br>recall: 66.7<br> f1: 71.0<br>loss: 0.637</td><td align="right">acc: <strong>84.3</strong><br> prec: 78.3<br>recall: 69.9<br> f1: 73.3<br> loss: 0.424</td><td align="right">acc: <strong>76.0</strong><br> prec: 77.0<br>recall: 74.1<br> f1: 75.5<br> loss: 0.537</td><td align="right">acc: <strong>82.5</strong><br> prec: 81.6<br> recall: 83.1<br> f1: 82.3<br> loss: 0.512</td><td align="right">acc: <strong>91.7</strong><br> prec: 90.7<br> recall: 92.3<br> f1: 91.8<br> loss: 0.381</td></tr><tr><td align="left">ComplexGRU</td><td align="right"></td><td align="right"></td><td align="right"></td><td align="right"></td><td align="right"></td></tr><tr><td align="left">ComplexQNN</td><td align="right">acc: <strong>78.2</strong><br> prec: 66.3 <br>recall: 81.0<br> f1: 72.9<br>loss: 0.913</td><td align="right">acc: <strong>84.4</strong><br> prec: 76.8<br>recall: 71.7<br> f1: 74.2<br> loss: 0.580</td><td align="right">acc: <strong>73.6</strong><br> prec: 70.2<br>recall: 82.0<br> f1: 75.6<br> loss: 0.832</td><td align="right">acc: <strong>80.4</strong><br> prec: 80.4<br> recall: 79.4<br> f1: 79.9<br> loss: 0.623</td><td align="right">acc: <strong>90.1</strong><br> prec: 89.6<br> recall: 90.8<br> f1: 90.2<br> loss: 0.406</td></tr><tr><td align="left">ELMo</td><td align="right">acc: <strong>85.4</strong><br> prec: 80.0<br> recall: 79.8<br> f1: 79.9<br> loss: 0.381</td><td align="right">acc: <strong>90.5</strong><br> prec: 88.2<br> recall: 80.4<br> f1: 84.1<br> loss: 0.250</td><td align="right">acc: <strong>81.0</strong><br> prec: 77.0<br> recall: 88.3<br> f1: 82.3<br> loss: 0.415</td><td align="right">acc: <strong>88.8</strong><br> prec: 89.3<br> recall: 87.6<br> f1: 88.4<br> loss: 0.296</td><td align="right">acc: <strong>94.9</strong><br> prec: 95.6<br> recall: 94.1<br> f1: 94.9<br> loss: 0.140</td></tr><tr><td align="left">BERT</td><td align="right">acc: <strong>88.8</strong><br> prec: 81.8<br> recall: 88.0<br> f1: 85.2<br> loss: 0.289</td><td align="right">acc: <strong>89.5</strong><br> prec: 87.3<br> recall: 77.9<br> f1: 82.3<br> loss: 0.362</td><td align="right">acc: <strong>84.9</strong><br> prec: 86.0<br> recall: 83.3<br> f1: 84.6<br> loss: 0.360</td><td align="right">acc: <strong>88.9</strong><br> prec: 93.0<br> recall: 83.6<br> f1: 88.0<br> loss: 0.298</td><td align="right">acc: <strong>95.2</strong><br> prec: 95.5<br> recall: 94.9<br> f1: 95.2<br> loss: 0.142</td></tr><tr><td align="left">RoBERTa</td><td align="right">acc: <strong>90.4</strong><br> prec: 92.7<br> recall: 79.8<br> f1: 85.8<br> loss: 0.265</td><td align="right">acc: <strong>90.9</strong><br> prec: 85.0<br> recall: 86.1<br> f1: 85.6<br> loss: 0.257</td><td align="right">acc: <strong>89.8</strong><br> prec: 89.1<br> recall: 90.7<br> f1: 89.9<br> loss: 0.304</td><td align="right">acc: <strong>89.8</strong><br> prec: 88.8<br> recall: 90.7<br> f1: 89.7<br> loss: 0.238</td><td align="right">acc: <strong>96.7</strong><br> prec: 97.6<br> recall: 95.8<br> f1: 96.7<br> loss: 0.098</td></tr><tr><td align="left">Complex-QDNN(with <code>bert-tiny</code>)</td><td align="right">acc: <strong>83.7</strong><br> prec: 81.0<br> recall: 71.8<br> f1: 76.2<br> loss: 0.607</td><td align="right"></td><td align="right">acc: <strong>77.4</strong><br> prec: 79.9<br> recall: 73.3<br> f1: 76.4<br> loss: 0.849</td><td align="right">acc: <strong>77.2</strong><br> prec: 71.6<br> recall: 88.6<br> f1: 79.2<br> loss: 0.613</td><td align="right"></td></tr></tbody></table><p>一些细节：</p><ol><li>量子启发式语言模型（预训练+微调）：基于复数值神经网络 &amp; 预训练语言模型</li><li>方法：Complex encode<ol><li>ComplexPyTorch</li><li>ComplexLinear</li><li>ComplexConv2d</li><li>ComplexBatchNorm</li></ol></li><li>评估：<ol><li>sentiment classification</li><li>GLUE + CLUE</li></ol></li></ol><p>模型构建</p><p>embedder: [batch_sz, seq_len] -&gt; [batch_sz, seq_len, embedding_dim]</p><p>encoder: [batch_sz, seq_len, embedding_dim]</p><ul><li>complexcnn: </li><li>qnn</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 此处可以考虑给tokens随机加上一个虚部，或者虚部使用另外一种embedding!!!</span></span><br><span class="line"><span class="comment"># TODO</span></span><br><span class="line"><span class="comment"># embedding_type: random, GloVe or Word2vec, contextual embedding</span></span><br><span class="line"><span class="comment"># 思路：a + 1j * b</span></span><br><span class="line"><span class="comment"># tokens = ptm_tokens + 1j * ptm_tokens</span></span><br><span class="line"><span class="comment"># 实现：通过real_embedder将tokens -&gt; real_part, 通过imag_encoder将tokens -&gt; imag_part</span></span><br><span class="line"><span class="comment"># final_encoder = real_part + 1j * imag_part</span></span><br><span class="line"><span class="comment"># 注：这是一种简单的实现方式，另外还可以构造complex-valued embedding，但前者更符合模型构建的意义</span></span><br><span class="line"><span class="comment"># 意义：复数词向量空间/希尔伯特空间能够表示更加复杂的意义（相比于经典实数空间），提高模型的异构性，尝试使用实部、虚部分别编码不同的信息，一方面不同信息可以相互纠缠，另一方面模型表达能力得到提升</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># encoder: complex_tokens -&gt; vector</span></span><br><span class="line"><span class="comment"># Process:</span></span><br><span class="line"><span class="comment"># token: [batch_size, seq_len]</span></span><br><span class="line"><span class="comment"># complex_embedder: ptm_tokens + 1j * ptm_tokens</span></span><br><span class="line"><span class="comment"># token: [batch_size, seq_len, emb_dim]</span></span><br><span class="line"><span class="comment"># 分两种方向：其一量子启发式模型，其二复数值神经网络</span></span><br><span class="line"><span class="comment"># 其一：量子启发式模型</span></span><br><span class="line"><span class="comment"># 前面token对应词语的量子态表示，通过外积、求和（加权），可以得到句子的密度矩阵表示</span></span><br><span class="line"><span class="comment"># sequence: [batch_size, emb_dim, emb_dim]</span></span><br><span class="line"><span class="comment"># 演化：学习文本内部特征，不改变维度 [emb_dim, emb_dim]；gru, cnn, fc, transformer</span></span><br><span class="line"><span class="comment"># sequence: [batch_size, emb_dim, emb_dim]</span></span><br><span class="line"><span class="comment"># 测量：tr(PV), 其中P是测量算子对应的密度矩阵</span></span><br><span class="line"><span class="comment"># prediction: [batch_size, num_labels]</span></span><br><span class="line"><span class="comment"># 其二：复数值神经网络</span></span><br><span class="line"><span class="comment"># encoder: [seq2seq], seq2vec; 具体地，complexcnn, complexgru, complexdnn</span></span><br><span class="line"><span class="comment"># sequence: [batch_size, hidden_size]</span></span><br><span class="line"><span class="comment"># classifer: nn.Linear()</span></span><br><span class="line"><span class="comment"># sequence: [batch_size, num_labels]</span></span><br></pre></td></tr></table></figure><p><strong>Ｑ　＆　Ａ</strong></p><p>Q: datasets processing</p><p>A: Allennlp pipeline.</p><p>Q: CR, MPQA, MR, SUBJ</p><p>A: 先读取所有数据，然后打乱，最后按7:3分割训练集和测试集</p><p>Q: version of BERT, RoBERTa</p><p>A: RoBERTa: <code>roberta-base</code>, BERT: <code>bert-base-cased</code></p><p>Q: RoBERTa 训练出现精度无法提升的问题</p><p>A: 学习率不能调的太高，适合lr&#x3D;1e-5</p><p>Q: ComplexNN 效果不好，解决方法</p><p>A: 解决中…思路：ComplexEmbedding, ComplexCNN, ComplexGRU, ComplexTransformer</p><p><strong>complexPytorch</strong></p><p><a href="https://openreview.net/pdf?id=H1T2hmZAb">Deep Complex NetWorks</a></p><img src="/2022/11/14/Natural-language-processing/image-20221121100930616.png" class alt="image-20221121100930616"><p>ComplexNN 优势</p><ul><li>complex numbers could have a richer representational capacity and could also facilitate noise-robust memory retrieval mechanisms</li><li>quantum</li></ul><p>ComplexNN 组件</p><ul><li>Linear</li><li>Conv2d</li><li>ConvTranspose2d</li><li>MaxPool2d</li><li>AvgPool2d</li><li>Activation: Relu (CRelu), Sigmoid, Tanh</li><li>Dropout2d</li><li>BatchNorm: BatchNorm1d, BatchNorm2d</li><li>GRU &#x2F; BN-GRU Cell</li><li>convolutional LSTMs</li></ul><p>结合方式</p><ul><li>Pretrained models (PTMs): 预训练语料库模型</li><li>ComplexNN: 基于 complex feed-forward, complex convolutions and complex LSTMs 构建词嵌入层、演化层、测量层</li><li>双流：1）PTM-&gt; 语义信息 2）ComplexNN -&gt; 隐藏信息（real: , img: ）</li></ul><p>实验</p><ol><li>ComplexNN <ol><li>ComplexTextCNN (Compare with TextCNN)</li><li>ComplexGRU (Compare with TextGRU)</li><li>Quantum-inspired Model (Complex Embedding + Projection + Evolution + Measurement)</li></ol></li><li>PTMs (BERT, RoBERTa)</li><li>双流（ComplexNN + PTMs）</li></ol><p>GLUE Results</p><table><thead><tr><th></th><th>Score</th><th>CoLA</th><th>SST-2</th><th>MRPC</th><th>STS-B</th><th>QQP</th><th>MNLI-m</th><th>MNLI-mm</th><th>QNLI</th><th>RTE</th><th>WNLI</th><th align="center">Diagnostics</th></tr></thead><tbody><tr><td>BERT</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td align="center"></td></tr><tr><td>RoBERTa</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td align="center"></td></tr><tr><td>ERNIE</td><td>73.1</td><td><strong>56.0</strong></td><td>94.8</td><td><strong>89.8&#x2F;86.4</strong></td><td>87.9&#x2F;86.7</td><td>73.0&#x2F;89.8</td><td>35.7</td><td>37.1</td><td>93.0</td><td>71.3</td><td>49.3</td><td align="center">0.7</td></tr><tr><td>Mine</td><td>74.2</td><td>55.2</td><td><strong>95.3</strong></td><td>88.6&#x2F;84.8</td><td><strong>88.7&#x2F;87.6</strong></td><td>73.1&#x2F;89.8</td><td>36.0</td><td>36.9</td><td><strong>93.1</strong></td><td><strong>72.3</strong></td><td><strong>59.6</strong></td><td align="center"><strong>3.4</strong></td></tr></tbody></table><p>CLUE Results</p><table><thead><tr><th align="center">Model</th><th>AVG</th><th>AFQMC</th><th>TNEWS</th><th>IFLYTEK</th><th>CMNLI</th><th>OCNLI</th><th>CLUEWSC2020</th><th>CSL</th><th>CMRC2018</th><th>CHID</th><th>C3</th></tr></thead><tbody><tr><td align="center">BERT-Base-Chinese</td><td>72.57</td><td>74.63</td><td>57.13</td><td>61.29</td><td>80.97</td><td>75.22</td><td>81.91</td><td>81.90</td><td>65.30&#x2F;86.53</td><td>82.01</td><td>65.38</td></tr><tr><td align="center">HFL&#x2F;RoBERTa-wwm-ext</td><td>74.11</td><td>74.60</td><td>58.08</td><td>61.23</td><td>81.11</td><td>76.92</td><td>88.49</td><td>80.77</td><td>68.39&#x2F;88.50</td><td>83.43</td><td>68.03</td></tr><tr><td align="center"><a href="https://bj.bcebos.com/paddlenlp/models/transformers/ernie_3.0/ernie_3.0_base_zh.pdparams">ERNIE 3.0-Base-zh</a></td><td><strong>76.05</strong></td><td><strong>75.93</strong></td><td>58.26</td><td>61.56</td><td><strong>83.02</strong></td><td><strong>80.10</strong></td><td>86.18</td><td>82.63</td><td>70.71&#x2F;90.41</td><td><strong>84.26</strong></td><td><strong>77.88</strong></td></tr><tr><td align="center">Mine</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>训练过程</p><img src="/2022/11/14/Natural-language-processing/image-20221116142229229.png" class alt="image-20221116142229229"><p>提交结果</p><p><a href="https://www.cluebenchmarks.com/submit.html">submit</a></p><img src="/2022/11/14/Natural-language-processing/image-20221117105345864.png" class alt="image-20221117105345864"><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>改任务<ul><li>Simple: Sentiment classification</li><li>GLUE (English)</li><li>CLUE (Chinese)<ul><li>毕业论文</li></ul></li></ul></li><li>改模型<ul><li>Quantum-inspired Model</li><li>Complex Neural Network<ul><li>Complex Linear</li><li>Complex Convolution</li><li>Complex GRU</li></ul></li></ul></li><li>量子机器学习-分类<ul><li>量子线路学习 （参数化量子线路）</li><li>量子叠加、量子纠缠</li></ul></li><li>量子NLP（剑桥）<ul><li>Cambridge Quantum</li><li>DisCoCat</li><li>pytket</li><li>lambeq</li></ul></li></ol><p>Model</p><ol><li>ERNIE-Gram</li><li>集成学习、预训练、微调、提示学习、蒸馏、数据增强</li></ol><p>经典NLP方法：</p><ol><li>数据预处理：将文本转换为id</li><li>模型构建，预训练模型+分类器</li><li>模型训练：热启动、AdamW优化器、交叉熵损失、准确率评估</li></ol><p>量子启发式模型处理NLP下游任务</p><p>预处理过程：大小写、分词、去除停用词、转化词典id</p><p>模型处理过程：</p><p>1）词嵌入：将词典id转化为词向量</p><p>2）特征提取：基于神经网络中间层（CNN、RNN、DNN、Transformer）提取特征，通过激活函数（ReLU，tanh，sigmoid）提升模型的非线性表达能力，dropout降低过拟合</p><p>3）分类预测：linear + Softmax</p><p>4）反向传播更新模型参数：基于优化器（SGD，Adagrad，RMSProp，Adam）根据Loss值计算梯度，并更新参数</p><h2 id="常见模型"><a href="#常见模型" class="headerlink" title="常见模型"></a>常见模型</h2><h3 id="TextCNN"><a href="#TextCNN" class="headerlink" title="TextCNN"></a>TextCNN</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TextCNN</span>(paddle.nn.Layer):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, vocab_size, embedding_size, classes, pretrained=<span class="literal">None</span>, kernel_num=<span class="number">100</span>, kernel_size=[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], dropout=<span class="number">0.5</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(TextCNN, self).__init__()</span><br><span class="line">        self.vocab_size = vocab_size</span><br><span class="line">        self.embedding_size = embedding_size</span><br><span class="line">        self.classes = classes</span><br><span class="line">        self.pretrained = pretrained</span><br><span class="line">        self.kernel_num = kernel_num</span><br><span class="line">        self.kernel_size = kernel_size</span><br><span class="line">        self.dropout = dropout</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.pretrained != <span class="literal">None</span>:</span><br><span class="line">            self.embedding = nn.Embedding(num_embeddings=self.vocab_size, embedding_dim=self.embedding_size, padding_idx=<span class="number">0</span> ,_weight=pretrained)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.embedding = nn.Embedding(num_embeddings=self.vocab_size, embedding_dim=self.embedding_size, padding_idx=<span class="number">0</span>)</span><br><span class="line">        self.convs = nn.LayerList([nn.Conv2D(<span class="number">1</span>, self.kernel_num, (kernel_size_, embedding_size)) <span class="keyword">for</span> kernel_size_ <span class="keyword">in</span> self.kernel_size])</span><br><span class="line">        self.dropout = nn.Dropout(self.dropout)</span><br><span class="line">        self.linear = nn.Linear(<span class="number">3</span> * self.kernel_num, self.classes)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="comment"># [N, S]</span></span><br><span class="line">        embedding = self.embedding(x).unsqueeze(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># [N, 1, S, E]</span></span><br><span class="line">        convs = [nn.ReLU()(conv(embedding)).squeeze(<span class="number">3</span>) <span class="keyword">for</span> conv <span class="keyword">in</span> self.convs]</span><br><span class="line">        <span class="comment"># [[N, kernel_num, S - 2], [N, kernel_num, S - 3], [N, kernel_num, S - 4]]</span></span><br><span class="line">        pool_out = [nn.MaxPool1D(block.shape[<span class="number">2</span>])(block).squeeze(<span class="number">2</span>) <span class="keyword">for</span> block <span class="keyword">in</span> convs]</span><br><span class="line">        <span class="comment"># [[N, kernel_num] * 3]</span></span><br><span class="line">        pool_out = paddle.concat(pool_out, <span class="number">1</span>)</span><br><span class="line">        logits = self.linear(pool_out)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> logits</span><br></pre></td></tr></table></figure><h3 id="QPFE-ERNIE-Mine"><a href="#QPFE-ERNIE-Mine" class="headerlink" title="QPFE-ERNIE (Mine)"></a>QPFE-ERNIE (Mine)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">QPFE_ERNIE</span>(nn.Layer):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, seq_length, vocab_size, embedding_dim=<span class="number">128</span>, hidden_size=<span class="number">128</span>, label_size=<span class="number">2</span>, *args, **kwargs</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.amplitude = nn.Embedding(vocab_size, embedding_dim)</span><br><span class="line">        self.phase = FeaturePhase(vocab_size, embedding_dim)</span><br><span class="line">        self.evolution = nn.GRU(embedding_dim, embedding_dim)</span><br><span class="line">        self.classifier = nn.Linear(<span class="number">768</span> + seq_length, label_size)</span><br><span class="line">        self.projector = paddle.create_parameter(shape=[embedding_dim, <span class="number">1</span>], dtype=<span class="string">&quot;float32&quot;</span>)</span><br><span class="line">        self.projector.stop_gradient = <span class="literal">True</span></span><br><span class="line">        self.ernie = ErnieModel.from_pretrained(<span class="string">&quot;ernie-1.0&quot;</span>)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, input_ids, segment_ids=<span class="literal">None</span></span>):</span><br><span class="line">        amplitude = self.amplitude(input_ids)</span><br><span class="line">        phase = self.phase(input_ids)</span><br><span class="line">        real = amplitude * paddle.cos(phase)</span><br><span class="line">        <span class="comment"># imag = amplitude * paddle.sin(phase)</span></span><br><span class="line">        real_, final = self.evolution(real)  <span class="comment"># [32, 128, 768]</span></span><br><span class="line">        p = real_ @ self.projector  <span class="comment"># [1, embedding_dim] @ [batch, seq_lenth, embedding_dim, 1]</span></span><br><span class="line">        p = p.squeeze().square()</span><br><span class="line">        _, ernie_hidden = self.ernie(input_ids, segment_ids)</span><br><span class="line">        cat = paddle.concat((p, ernie_hidden), -<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> self.classifier(cat)</span><br></pre></td></tr></table></figure><p>投影测量 （by 黎师兄）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn.parameter <span class="keyword">import</span> Parameter</span><br><span class="line"></span><br><span class="line">CUDA_NUMBER = <span class="number">2</span></span><br><span class="line">device = torch.device(<span class="string">f&#x27;cuda:<span class="subst">&#123;CUDA_NUMBER&#125;</span>&#x27;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&#x27;cpu&#x27;</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">projection</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, Embedding_dim</span>):</span><br><span class="line">        <span class="built_in">super</span>(projection, self).__init__()</span><br><span class="line">        self.projector = nn.init.uniform_(Parameter(torch.Tensor(<span class="number">2</span>, Embedding_dim, <span class="number">1</span>)))</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self,inputs</span>):</span><br><span class="line">        amplitude = inputs[<span class="number">0</span>]</span><br><span class="line">        phase = inputs[<span class="number">1</span>]</span><br><span class="line">        </span><br><span class="line">        amplitude_permute = amplitude.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">        amplitude_norm = torch.zeros(amplitude_permute.shape[<span class="number">0</span>], amplitude_permute.shape[<span class="number">1</span>], amplitude_permute.shape[<span class="number">2</span>]).cuda(CUDA_NUMBER)</span><br><span class="line">        <span class="keyword">for</span> i, sentence <span class="keyword">in</span> <span class="built_in">enumerate</span>(amplitude_permute):</span><br><span class="line">            <span class="keyword">for</span> j, word <span class="keyword">in</span> <span class="built_in">enumerate</span>(sentence):</span><br><span class="line">                amplitude_norm[i][j] = word</span><br><span class="line">                <span class="comment"># 如果不是零向量则归一化</span></span><br><span class="line">                <span class="keyword">if</span> torch.norm(word) !=<span class="number">0</span>:</span><br><span class="line">                    amplitude_norm[i][j] = word / torch.norm(word)</span><br><span class="line">                    </span><br><span class="line">        phase_permute = phase.permute(<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">        </span><br><span class="line">        real_part = amplitude_norm*torch.cos(phase_permute)</span><br><span class="line">        imag_part = amplitude_norm*torch.sin(phase_permute)</span><br><span class="line">        real_part_expand = torch.unsqueeze(real_part, dim=<span class="number">3</span>)</span><br><span class="line">        imag_part_expand = torch.unsqueeze(imag_part, dim=<span class="number">3</span>)</span><br><span class="line">       </span><br><span class="line">        real_part_expand_transpose = real_part_expand.permute(<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line">        imag_part_expand_transpose = imag_part_expand.permute(<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line">       </span><br><span class="line">        v_real = torch.matmul(real_part_expand, real_part_expand_transpose) - torch.matmul(imag_part_expand, imag_part_expand_transpose)</span><br><span class="line">        v_imag = torch.matmul(imag_part_expand, real_part_expand_transpose) + torch.matmul(real_part_expand, imag_part_expand_transpose)</span><br><span class="line">        </span><br><span class="line">        v_real_avg = torch.zeros(v_real.shape[<span class="number">0</span>], v_real.shape[<span class="number">2</span>], v_real.shape[<span class="number">3</span>]).cuda(CUDA_NUMBER)</span><br><span class="line">        v_imag_avg = torch.zeros(v_imag.shape[<span class="number">0</span>], v_imag.shape[<span class="number">2</span>], v_imag.shape[<span class="number">3</span>]).cuda(CUDA_NUMBER)</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        v_real_avg = torch.mean(v_real, dim=<span class="number">1</span>, keepdim=<span class="literal">False</span>)</span><br><span class="line">        v_imag_avg = torch.mean(v_imag, dim=<span class="number">1</span>, keepdim=<span class="literal">False</span>)</span><br><span class="line">        <span class="comment"># v_real_avg (batch_size, embedding_dim, embedding_dim)</span></span><br><span class="line">     </span><br><span class="line">        p_real = self.projector[<span class="number">0</span>]</span><br><span class="line">        p_imag = self.projector[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        p_real_norm = p_real / torch.norm(p_real, dim=<span class="number">0</span>)</span><br><span class="line">        p_imag_norm = p_imag / torch.norm(p_imag, dim=<span class="number">0</span>)</span><br><span class="line">        </span><br><span class="line">        p_real_mat = torch.matmul(p_real_norm, p_real_norm.permute(<span class="number">1</span>, <span class="number">0</span>))</span><br><span class="line">        p_imag_mat = torch.matmul(p_imag_norm, p_imag_norm.permute(<span class="number">1</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">        Pv_real = torch.matmul(v_real_avg, p_real_mat) - torch.matmul(v_imag_avg, p_imag_mat)</span><br><span class="line">        Pv_imag = torch.matmul(v_real_avg, p_imag_mat) + torch.matmul(v_imag_avg, p_real_mat)</span><br><span class="line"></span><br><span class="line">        batch_trace = torch.zeros(Pv_real.shape[<span class="number">0</span>],).cuda(CUDA_NUMBER)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(Pv_real.shape[<span class="number">0</span>]):</span><br><span class="line">            batch_trace[i] = torch.sqrt(torch.trace(Pv_real[i])*torch.trace(Pv_real[i]) + torch.trace(Pv_imag[i])*torch.trace(Pv_imag[i])) </span><br><span class="line">        <span class="keyword">return</span> batch_trace.reshape((batch_trace.shape[<span class="number">0</span>], <span class="number">1</span>)) </span><br></pre></td></tr></table></figure><h2 id="参考论文"><a href="#参考论文" class="headerlink" title="参考论文"></a>参考论文</h2><p>量子NLP</p><p><a href="https://arxiv.org/pdf/2102.12846.pdf">QNLP in Practice: Running Compositional Models of Meaning on a Quantum Computer</a></p><p>量子启发式</p><p><a href="https://www.mdpi.com/1099-4300/24/5/621">Quantum-Inspired Complex-Valued Language Models for Aspect-Based Sentiment Classification</a></p><p>复数值网络</p><p><a href="https://openreview.net/forum?id=H1T2hmZAb">Deep Complex Networks (ICLR, 2018)</a></p><p><strong>CNN</strong></p><p>convolution2d layer:</p><p>根据<strong>输入、卷积核、步长（stride）、填充（padding）、空洞大小（dilations）</strong>计算输出特征层大小，输入和输出是NCHW or NHWC，其中 N 是 batch_size，C 是通道数，H 是特征高度，W 是特征宽度。卷积核是 MCHW 格式，M 是输出图像通道数，C 是输入图像通道数，H 是卷积核高度，W 是卷积核宽度。</p><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><p>torch.Tensor.abs() 复数值取模长($\sqrt{a^2+b^2}$)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;NLP相关框架&quot;&gt;&lt;a href=&quot;#NLP相关框架&quot; class=&quot;headerlink&quot; title=&quot;NLP相关框架&quot;&gt;&lt;/a&gt;NLP相关框架&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;PyTorch Lightning&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;</summary>
      
    
    
    
    <category term="计算机" scheme="https://levyya.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="NLP" scheme="https://levyya.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/NLP/"/>
    
    
    <category term="NLP" scheme="https://levyya.github.io/tags/NLP/"/>
    
  </entry>
  
  <entry>
    <title>公考--申论</title>
    <link href="https://levyya.github.io/2022/11/14/%E5%85%AC%E8%80%83-%E7%94%B3%E8%AE%BA/"/>
    <id>https://levyya.github.io/2022/11/14/%E5%85%AC%E8%80%83-%E7%94%B3%E8%AE%BA/</id>
    <published>2022-11-14T07:58:57.000Z</published>
    <updated>2023-01-10T12:35:53.998Z</updated>
    
    <content type="html"><![CDATA[<p>参考学习</p><ul><li>b站刘文超、小马哥</li></ul><h2 id="归纳概括题"><a href="#归纳概括题" class="headerlink" title="归纳概括题"></a>归纳概括题</h2><h3 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h3><p>考点：现状、功能、原因、变化、发展过程</p><p>申论题是客观题！</p><p>回答考虑方面：认知&#x2F;理念（自己的想法）、目标&#x2F;目的（对外的想法）、方式&#x2F;过程（做法）、能力&#x2F;效率（结果）</p><p>结合小马哥思路：<code>找大哥，配不配</code></p><h4 id="例1-改善杨家村环境"><a href="#例1-改善杨家村环境" class="headerlink" title="例1 改善杨家村环境"></a>例1 改善杨家村环境</h4><p>请根据给定资料1，概括小梁改善杨家村人居环境的主要做法。(20分)<br>要求：全面准确，简明扼要，条理清晰，不超过200字</p><p>参考答案：</p><p>小梁发挥聪明才智，因地制宜为杨家村制定了一套解决方案。</p><p>开展活动，激发内生动力：征集有关家居环境改善的“微心愿”，并设计涵盖个人卫生和居家环境的评分细则，每周公布评分结果，最终按照积分排名兑现前20名的“微心愿”。</p><p>创新宣传，提升荣誉感：为村民拍摄生活照，并制成精美海报，张贴在村里醒目位置。</p><p>完善制度，改变卫生习惯：实行有奖举报制度，向村委会举报乱倒垃圾，调查属实奖励举报者一袋面粉。</p><p>(195)</p><hr><h4 id="例2-基层“绣花针”"><a href="#例2-基层“绣花针”" class="headerlink" title="例2 基层“绣花针”"></a>例2 基层“绣花针”</h4><p>根据”给定资料1”，请你谈谈老马是怎样“当好基层这根’绣花针”的。(10分)</p><p>要求：全面、准确、有条理。不超过200字。</p><p>参考答案：</p><p>老马把为群众服务视为终生事业，当好基层绣花针。</p><p>1、锤炼本领：坚持每天学习3个小时，调解矛盾纠纷2000多起，写了520多万字工作笔记。</p><p>2、用心调解：注重做好思想政治工作．做好情绪疏导和心灵抚慰工作，感动群众。</p><p>3、真诚待人：立下接待群众24字规矩：起立迎接，请坐倒水倾听记录，交流引导，解决<br>问题，出门相送，把工作室温馨的驿站。</p><p>4、乐于分享：老马培养了不少善做调解工作的“小马”，共同努力，调解各种矛盾纠纷。(197字)</p><hr><h4 id="例3-大运河建设现状"><a href="#例3-大运河建设现状" class="headerlink" title="例3 大运河建设现状"></a>例3 大运河建设现状</h4><p>根据资料5，概括大运河浙江段文化带建设的现状。(10分)</p><p>要求：(1)全面、准确，有条理;(2) 字数不超过100字。</p><p>参考答案：</p><p>一列入世界遗产名录，非物质文化遗产源远流长;</p><p>二历史文化聚落及运河文化得到保护;</p><p>三建设基础牢固，制度保障及体制机制完善，推动可持续发展;</p><p>四运河水质全面改善，生态建设成效显著;</p><p>五将建成高端服业集聚发展带。<br>(100字)</p><hr><h4 id="例4-科技特派员小童"><a href="#例4-科技特派员小童" class="headerlink" title="例4 科技特派员小童"></a>例4 科技特派员小童</h4><p>根据材料1、2，归纳概括出小童被评选为“全市十佳科技特派员”的原因。(15分)</p><p>要求：全面、准确、简明，有条理，字数不超过200字。</p><p>参考答案：</p><p>一、获领导肯定：吃苦耐劳，工作积极性高，自我要求高;</p><p>二、获同事认可：认具对子，列白明，一应能力强;</p><p>三、获群众称赞：态度好，亲和力强，擅长与群众打交道，科教工作符合群众需要;</p><p>四、科教工作有创新有成果：1、手把手传技术，把课堂设在田间地头，使用土话、短话讲解，在网上开展订单化培训。2、讲解最新农技知识，内容实用性强，针对性强。3、擅于通过语言、案例调动农民积极性。</p><p>（199字）</p><hr><h4 id="例5-城市水系的功能"><a href="#例5-城市水系的功能" class="headerlink" title="例5 城市水系的功能"></a>例5 城市水系的功能</h4><p>根据“给定资料2”，阐述城市水系所具有的功能。(15分）<br>要求：(1）准确、精练，条理清晰；(2）不超过150字。</p><p>参考答案：</p><p>城市水系促进城市繁荣发展，有以下功能：</p><p>1、文化功能：沉淀历史，赋予灵气;</p><p>2、生态功能：蓄积雨洪、分流下渗、调节行洪，调节城市气候，廉价、有效的净化城市污水，为野生动物提供活动场所，增强城市生态系统稳定性；</p><p>3、美学功能：造就景观，调节心态;</p><p>4、保障安全功能：供水、防灾、隔离保护功能;</p><p>5、运输功能。</p><p>(148字)</p><hr><h4 id="例6-家乡的新变化"><a href="#例6-家乡的新变化" class="headerlink" title="例6 家乡的新变化"></a>例6 家乡的新变化</h4><p>根据”给定资料1”，请概括小张家乡出现的新变化。(15分)</p><p>要求：准确全面，条理清晰。不超过200字。</p><p>参考答案：</p><p>一、生活更富裕：村民生活水平提高，网购增加，生活更讲究。村民心里更加踏实，对未来充满信心。</p><p>二、产业更兴旺：包装技术提升，快递、电商业务增加。电商平台让农产品销售更便捷卖好价钱。电商个体户、快递公司、电商产业园增加，产业规模不断扩大。</p><p>三、乡村更宜居：农村道路、水沟等生产生活设施建设不断完善，人居环境得到改善，村容村貌得到美化。</p><p>四、吸引力更大：返乡创业增加，外来投资增加助推产业多元化发展。</p><p>（194字）</p><hr><h4 id="例7-村寨银行"><a href="#例7-村寨银行" class="headerlink" title="例7 村寨银行"></a>例7 村寨银行</h4><p>“给定资料1”中，风林村在实施”村寨银行”项目后，发生了巨大变化。请你谈谈风林村有了哪些变化(10分)<br>要求：全面、准确、有条理，不超过250字。</p><p>参考答案：</p><p>一、村民自治发挥实效。因地制宜制定村规民约及管理制度，“一事一议”落到实处。村民之间也更和睦更团结。</p><p>二、生态环境越来越好。划定了自然保护地，制定了管埋杀例，明确了自然保护地的范围、保护措施、奖惩措施，村民有权利监督落实条例的执行情况。珍稀动物变多，生物多样性恢复。保护生态的内生动力形成，保护自然环境成为自觉。</p><p>三、村民生活走向富裕。村民生产生活的资金需求得到满足，种植果树，开辟中药材生产基地，农产品销往全国。</p><p>四、发展之路越走越宽。随着旅游发展，村民们建客栈、开餐馆、跑运输、做向导，干劲十足。</p><p>(247字)</p><hr><h4 id="例8-农村土地承包政策发展"><a href="#例8-农村土地承包政策发展" class="headerlink" title="例8 农村土地承包政策发展"></a>例8 农村土地承包政策发展</h4><p>给定资料1和给定资料2反映了改革开放以来我国农村土地承包政策的发展过程，请你概述这一发展过程。(10分)<br>要求：(1）准确、全面、有条理;(2)不超过200字。</p><p>参考答案：<br>1.1980年前后，家庭联产承包责任制开始在中国广大农村推行;</p><p>2.1981年底，第一轮家庭联产承包责任制初步落实;</p><p>3.1984年的中央一号文件提出“土地承包期一般应在十五年以上”，后中央提出“再延长三十年不变”;</p><p>4.20世纪90年代中后期，完成了“二轮土地承包”;</p><p>5.2003年实施的《农村土地承包法》确立了“承包土地以户为单位，减人不减地”的原则;</p><p>6.党的十九大报告明确提出“保持土地承包关系稳定并长久不变，第二轮土地承包到期后再延长三十年”。<br>（197字）</p><hr><h4 id="例9-看原题"><a href="#例9-看原题" class="headerlink" title="例9 看原题"></a>例9 看原题</h4><p>阅读”给定资料2”，在横线处填入这则资料的标题和三个部分的小标题。(10分)<br>要求：(1)准确、精炼;(2)标题和三个小标题须分条写，小标题要标注序号;(3)每条不超过20字。</p><p>参考答案：</p><p>大学生敢想敢干，企业家乐于合作;</p><p>作品新颖有特色，智能化走进生活;</p><p>创意作品守安全，市场价值获首肯。</p><h2 id="综合分析题"><a href="#综合分析题" class="headerlink" title="综合分析题"></a>综合分析题</h2><p>1、问啥答啥，有啥写啥;<br>2、理解语义，技巧辅助;<br>3、读出层次，找对大哥;<br>4、书写规范，形意结合。</p><h4 id="例1-种戏"><a href="#例1-种戏" class="headerlink" title="例1 种戏"></a>例1 种戏</h4><p>给定资料2中说：“我们不仅仅是为乡村群众唱几场戏，更重要的是要”种戏“。请你根据给定资料2，谈谈对“种戏”的理解。(15分)</p><p>要求：分析全面，条理清晰。不超过300字。</p><p>参考答案：</p><p>种戏是指让戏曲在乡村扎根，结合刘村实际，就是要把握戏曲生存与发展的规律，做好三个方面让戏曲回归民间，回归群众。</p><p>一、让戏曲唱得响。实施文化惠民工程，送戏下乡，鼓励戏曲艺术表演团体与乡村戏曲团队开展活动，鼓励民间文艺团体发展，帮助乡村文艺人才提高创作水平和表演能力。</p><p>二、让戏曲传得开。1、借助民间生活礼仪，结合民间风俗和节庆文化开展戏曲演出，培育戏曲在乡村生存发展的土壤，推广普及戏曲艺术。2、调查不同观众需求，根据调查结果制定乡村演出节目单。3、采集贴近乡村生活的民间故事，加入现代元素，进行现代化创新，创排代戏曲作品。</p><p>三、让戏曲留得住。创办戏曲表演班，从乡村挖掘有潜力的孩子加以培养， 以后再反哺乡村。</p><p>(300字)</p><hr><h4 id="例2-小吴的变化"><a href="#例2-小吴的变化" class="headerlink" title="例2 小吴的变化"></a>例2 小吴的变化</h4><p>根据”给定资料3”．请分析小吴发生了哪些变化，使得村民们对她的称呼从“那个大学生”变成了“小吴”。(10分)<br>要求：准确全面，恰当提炼，条理清晰。不超过200字。</p><p>参考答案：</p><p>小吴有四个方面的变化：</p><p>一、自我认知方面，从高看自己到学方言，走水田，与村民同劳作，理解村民不易。</p><p>二、工作目标方面，从为了自我证明自己到服务村民，帮村民解决教育、医疗、邻里矛盾等生活问题。</p><p>三、工作方式方面，从只会刻板坚持原则到能够与村民讲理并且能够通过情理结合把理讲通，打动群众。</p><p>四、工作能力方面，从缺乏实践能力到发挥自身专业优势，创建杂粮优质品牌并打入市场，带领农民增收致富。</p><p>（188字）</p><hr><h4 id="例3-城市水系像指纹"><a href="#例3-城市水系像指纹" class="headerlink" title="例3 城市水系像指纹"></a>例3 城市水系像指纹</h4><p>依据”给定资料2”，阐述划线句子“城市的水系就像城市的指纹”的意思。(10分)<br>要求：(1) 准确、全面，有逻辑性；(2）不超过200字。</p><p>参考答案：</p><p>这句话指城市水系体现了城市的特色。</p><p>因为水系具有美学功能，一是意境美，能调节心态，陶冶情操，赋予城市灵气。二是动态美，能消化污染，养育生物，造就独特自然景观和环境。三是人文美，能承载、造就独特的历史文化。四是和谐美，是整体复合系统，能体现城市管理者的抱负、美学修养和情操，优化城市布局。</p><p>因此，决策者应重视自身美学修养和情操，将美学功能凝聚在治理方案之中，打造城市特色，让城市更美好。</p><p>(190字)</p><hr><h4 id="例4-新技术是一种毁灭力量"><a href="#例4-新技术是一种毁灭力量" class="headerlink" title="例4  新技术是一种毁灭力量"></a>例4  新技术是一种毁灭力量</h4><p>结合“给定资料1”，谈谈你对文中划线句子“新技术是一种创造性的毁灭力量”的理解。(10分)<br>要求：(1)准确、全面;(2)不超过150字。</p><p>参考答案：</p><p>这句话是说新技术以创造新事物的方式颠覆旧事物，这种毁灭实则是创新。</p><p>“创造性”指新技术带来创新发明，推动制度创新，改变生产方式、生活方式和质量、思维观念、思考方向及对世界的认知。</p><p>“毁灭力量”指新技术拥有加速度的特质，更新换代快，具有颠覆性， 能够迅速淘汰某种产品或行业，如电脑、手机等电子产品。</p><p>（134）</p><hr><h4 id="例5-土地调整"><a href="#例5-土地调整" class="headerlink" title="例5 土地调整"></a>例5 土地调整</h4><p>给定资料2中，L村村支书面对村民土地调整的要求，发出感慨：“这样一来，我们的压力很大，看来村里的土地调整也不是一个简单的事。”请根据给定资料2，分析他为什么感到压力很大。(10分)<br>要求：(1）全面、准确、有条理;(2）不超过200字。</p><p>参考答案：</p><p>因为村民、国家政策、地方政府、土地使用情况让他感到土地调整难</p><p>1、家庭人多地少的村民认为不公平，要求调整。家庭人少地多的村民认为应按规定保持30年不变;</p><p>2、国家政策规定小调整、大稳定的前提是稳定，调整限制条件多，强调现有土地承包关系保持稳定并长久不变;</p><p>3、地方政府支持村民土地调整的诉求但调整与国家政策相冲突;</p><p>4、机动地已分配完，“增人增地但减人不减地”的办法难以为继，土地收益不高流转难，撂荒。<br>（195字）</p><hr><h4 id="例6-城市建设与管理"><a href="#例6-城市建设与管理" class="headerlink" title="例6 城市建设与管理"></a>例6 城市建设与管理</h4><p>给定资料4提到，“城市建设与管理的目的如果仅仅是为满足经济或某种美观诉求，显然是片面的，甚至是短视而危险的。”请根据给定资料3和给定资料4．谈谈你对这句话的理解。(20分)<br>要求：(1)观点明确，分析全面，有逻辑性;(2)不超过300字。</p><p>参考答案：</p><p>城市建设与管理的目的不能仅仅是为满足经济或某种美观诉求，而更应该关注人，给人们幸福感、归属感和安全感。</p><p>城市建设与管理的目的如果仅仅是为满足经济或某种美观诉求，会压缩公共空间，导致居民生活活动空间缩小。会导致文化气息消失，人居环境变差，本地居民外流。甚至会激化社会矛盾，引发社会问题。</p><p>因此，要转变城市治理理念，重视共享。通过建设、设计、改造等方式打造公园、文化广场等公共场所，为市民提供活动空间，展示空间，恢复城市公共领域的功能。要把握好历史文化保护、商业发展和居民人居环境三者之间的关系.彰显城市价值。让城市满足所有群众的需求，发挥社会平衡器的作用，让群众生活更美好。(284字)</p><hr><h4 id="例7-“遮蔽”"><a href="#例7-“遮蔽”" class="headerlink" title="例7 “遮蔽”"></a>例7 “遮蔽”</h4><p>“给定资料4”中的座谈会上，主持人说：“如果不能打破这种种’遮蔽’，就拿不出有份量的作品。”请谈谈你对“种种’遮蔽”的理解。(15分)<br>要求：观点明确，紧扣资料，准确全面，不超过200字。</p><p>参考答案：</p><p>种种“遮蔽”是指文艺创作中存在的问题或阻碍。表现为：</p><p>1、迎合“娱乐精神”，混淆现实与历史，哗众取宠，不尊重历史。2、仅停留在个人经验，满足于自我倾述的需要，作品难以回应时代体现群众真情实感。3、技术和金钱，让创作者感受不到阳光的温度，忘记了创作的初心。4、乡村和城市之间存在隔阂。</p><p>因此，创作者要尊重历史，深入基层，不忘初心，将个人情感与国家命运相连，创作出有时代精神、思想深度、生活温度的作品。<br>（196字）</p><hr><h4 id="例8-政策上的善意"><a href="#例8-政策上的善意" class="headerlink" title="例8 政策上的善意"></a>例8 政策上的善意</h4><p>根据”给定资料2”，谈谈你对“政策上的善意”的理解。(20分)<br>要求：理解准确，分析透彻，条理清晰;不超过300字。</p><p>参考答案：</p><p>政策上的善意是指政策的初衷，如《个人所得税专项附加扣除暂行办法》的善意是精准减负、税收公平。</p><p>住房租金专项附加扣除初衷是减轻税负，由于需要收集房东信息，造成了“给租客减税是为了向房东征税”的曲解，导致政策善意无法实现。相关部门通过技术迭代，将强制要求填写出租方信息改为选填，从信息采集源头就彻底打消公众的疑虑，表现出诚意，让善意实现。此外，面对“如果不填房东信息，如何证明真假?”的担忧。规定一旦查实利用虚假信息避税，将会被记入纳税人信用记录。用事后追责来代替事前繁琐的清白自证，体现税收的谦抑性。</p><p>由此可见，用技术迭代回应民众期待，用谦抑、信任释放政策善意，才能让好的政策收获更好的社会效果。</p><p>(295字)</p><hr><h4 id="例9-有居民，方有民居"><a href="#例9-有居民，方有民居" class="headerlink" title="例9 有居民，方有民居"></a>例9 有居民，方有民居</h4><p>根据“给定资料2”，谈谈你对划线部分“有居民，方有民居”的理解。(15分)<br>要求：紧扣资料，内容全面；逻辑清晰，语言准确；字数不超过200字。</p><p>参考答案：</p><p>有居民，方有民居。指有居民，民居才有真正的生活气息和乡村民居的味道。因为没人住，民居就是个屋子，没有人味儿，甚至废弃。</p><p>因此，民居保护要以人为本、与时俱进。避免只强调对民居原貌的修葺和保持，忽视甚至限制必要的现代化改造。避免过度的现代化甚至是商业化的改造。要让民居成为居民的安身之处和心灵寄托。例如XN村自发保护文物，同时改善人居环境满足人们的生活需求，返乡人员增加，让被废弃，濒临倒塌的民居又有了生气。</p><p>（189字）</p><hr><h4 id="例10-掌上四合院"><a href="#例10-掌上四合院" class="headerlink" title="例10 掌上四合院"></a>例10 掌上四合院</h4><p>请结合“给定资料1和2”，分析理解“掌上四合院”的内涵（20分)<br>要求：全面、准确、深入、有条理、不超过300个字。</p><p>参考答案：</p><p>“掌上四合院”是指街道党员干部为每栋楼的微信群内包含所有家庭代表、物业人员、居委会干部、党员，以及对应分片街道干部和社区工作人员。有三大作用：</p><p>一、促进问题解决：实现实时沟通，及时动员干群处理突发问题。集中讨论，达成共识，解决难题。征集意见， 优化工作，共同监督，实时反馈，促进干群共治，推动社区事务发展。</p><p>二、改善干群关系：群众诉求与干部表现都能追溯工作更加积极。倒逼干部走到群众身边，与群众建立了扁平化的直接联系，跟着问题走、带着感情干。</p><p>三、增添生活气息。居民在群里逐渐熟悉，拉近人心、增进情感，邻里关系更紧密，遇到难事互相帮助，有事情一起商量，社区真正成了大家的家，社区生活更加亲切和睦。</p><p>(298字)</p><h2 id="对策启示题"><a href="#对策启示题" class="headerlink" title="对策启示题"></a>对策启示题</h2><h4 id="例1-电商诚信体系建设"><a href="#例1-电商诚信体系建设" class="headerlink" title="例1 电商诚信体系建设"></a>例1 电商诚信体系建设</h4><p>根据”给定资料3”,假定你是某市市场监督管理局的工作人员，请就加强本市电商诚信体系建设提出政策建议。(20分)<br>要求:(1）紧扣贫科， 内合兵， s0”不超过400字。</p><p>参考答案：</p><p>一、深入贯彻落实政策法规:严格按照国家及市政府出台的政策法规，推动电子商务领域诚信体系建设。重点部署电子商务信用工作，逐步建立了统一的电子商务信用评价体系。</p><p>二、创新监管机制:进行传统监管的同时根据电商具有的跨地域性的特点,创新制度及方式，加强异地联合执法，依法对电商进行信用监管。</p><p>三、发挥电商平台作用:1、鼓励平台成立诚信联盟，签署《电子商务诚信公约》，促进行业自律。建立信息共享机制,设立专属网站，实现联盟成员之间的信息互通，并向公众公开联盟工作成果。2、引导平台开展诚信建设活动,妇推出企业诚信查询平台.曝光违规经营的商家等。</p><p>3、引导平台要求加盟商家签署《诚信商家承诺书》，并通过管理、技术、监管等多个角度对商家进行识别筛除。4、督促平台提高技术能力和服务水平，做好售后服务、综合服务，升级技术保护用户隐私。</p><p>四、加强宣传力度:以多种方式向商家宣传诚信经营的案例、意义及相关政策法规。(393字)</p><hr><h4 id="例2-老字号发展困境"><a href="#例2-老字号发展困境" class="headerlink" title="例2 老字号发展困境"></a>例2 老字号发展困境</h4><p>根据“给定资料2～4”分析部分老字号发展面临的困境，并从政府角度提出有效帮扶措施。(20分)<br>要求:针对性强，措施合理，操作可行。不超过250字。</p><p>参考答案：</p><p>困境:一、经营空间萎缩。二、遭知识产权侵权和恶性竞争。三、经营方式落后，历史包袱多，产品更新慢，缺乏改制勇气。</p><p>措施:—、加强保护:在市政建设中保护老字号原址打击侵权行为和恶性商业竞争，保护老工艺。二、积极扶持:给予资金补贴，减轻负担，组织培训，引导企业间交流经验，提升经营水平。三、支持融资:引导资产证券化，利用资本市场!四、拓宽销售渠道:政府牵头与网络电商平台合作，境外办展宣传。五、推动转型升级︰深挖品牌价值，打造品质品牌，建立企业文化。开展技术研发与创新，延伸产业链。提升创意营销能力。(247字)</p><hr><h2 id="应用文"><a href="#应用文" class="headerlink" title="应用文"></a>应用文</h2><h4 id="例1-倡议书"><a href="#例1-倡议书" class="headerlink" title="例1 倡议书"></a>例1 倡议书</h4><p>假如你是某市团委工作人员，根据“给定资料5~6”，针对目前部分年轻人精神生活状况，围绕”充实学习生活，明确人生方向”,写一篇倡议书。(25分)<br>要求:格式正确，语言恰当，表述得体。不超过300字。</p><p>参考答案：</p><p>争做有为青年,让青春无悔</p><p>广大青年朋友们:<br>        当前，一些年轻人学习上不求上进，缺乏方法;工作上缺乏激情和兴趣，逃避困难;生活上感情疮痍，忙，累，迷茫成为常态。为此，我们倡议∶<br>        一、积极生活:培养兴趣爱好，坚持不懈，及时行动，追求极致。二、越挫越勇:努力适应新生活，勇于挑战。三、不甘落后:热爱工作，勤奋进取，找准方法，吃苦耐劳，寻找工作动力，享受工作成果。四、认真负责:对工作和自己负责，尽心尽力。<br>        青年们，让我们挥洒青春汗水，实现人生价值!</p><p>XX市团委</p><p>XXXX年XX月X</p><hr><h4 id="例2-发言提纲"><a href="#例2-发言提纲" class="headerlink" title="例2 发言提纲"></a>例2 发言提纲</h4><p>省里召开扶贫工作座谈会，邀请小赵介绍发展花椒酱产业的经验。根据“给定资料2”，请为小赵写一份发言提纲。(20分)<br>要求:<br>(1）紧扣资料，内容具体;(2）语言简明，有逻辑性;(3）不超过400字。</p><p>参考答案：</p><p>关于发展花椒酱产业的发言提纲<br>        大家好!我是池口村党支部第一书记小赵，我村地处偏远、条件恶劣，生活贫困。我村通过发展花椒酱产业,去年村集体实现了66万元的收入。<br>        一是调研市场，定位产品:通过走访农户找准问题，同时充分了解花椒酱市场规模与竞争及相关政策情况，确定开发花椒酱。<br>        二是科学论证，统一思想:我带着村干部到周边县区和省食品研究院咨询花椒酱产业化的可行性，请教生产加工、质检以及食品安全等问题，排除了花椒酱存在有害成分和菌群超标的可能性。<br>        三是成立公司，合作开发:成立村集体企业池口农副产品开发有限责任公司,村民可以技术入股或半成品入股。同时与省食品研究院、省中小企业公共服务平台签订合作协议，共同开发、推广花椒酱。<br>        四是借力政策，降低成本:梅花椒价格非常高，我们通过申请“惠农贷款”种植了500多亩梅花椒，保证了原材料供应，降低了成本。(362字)</p><hr><h4 id="例3-讲解稿"><a href="#例3-讲解稿" class="headerlink" title="例3 讲解稿"></a>例3 讲解稿</h4><p>S市将举办“城市样板工程展示会”,请你根据给定资料5，就其中地下管廊建设情况撰写一份讲解稿。(20分)<br>要求:<br>(1）紧扣资料，内容全面;(2）逻辑清晰，语言准确;(3）不超过400字。</p><p>参考答案：</p><p>关于月亮湾地下管廊建设情况的讲解稿<br>各位领导、同志们:<br>        地下综合管廊是将自来水管道、供电、通信电缆等管线整体迁入地下的城市公共配套设施，能改善城市环境。我市月亮湾地下综合管廊自建成以来平稳运行多年，内部管线有序排列且预留管线空间，并容纳夏季集中供冷管道。<br>        我市从以下几点入手:</p><p>​        一是设立领导小组。市长担任组长，并涵盖辖区内单位主要负责人,形成常态化沟通和快速推进机制;编制规划、统筹管理。<br>​        二是筹集建设资金。组建开发公司，借力社会资本，负责投资、建设、运营和管理事务;除争取国家试点和省财政支持，通过市财政补贴确保股东收益。<br>​        三是科学设计施工。组织专家反复论证，确立系统化、标准化、智慧化的目标,实现信息化、一体化、智能化管理;<br>​        四是调动入廊积极性。合理制定收费项目和标准，让管线需求者自主选择使用方式,打造利益共同体，让各单位参与规划、设计和建设过程。</p><h2 id="大作文"><a href="#大作文" class="headerlink" title="大作文"></a>大作文</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考学习&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;b站刘文超、小马哥&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;归纳概括题&quot;&gt;&lt;a href=&quot;#归纳概括题&quot; class=&quot;headerlink&quot; title=&quot;归纳概括题&quot;&gt;&lt;/a&gt;归纳概括题&lt;/h2&gt;&lt;h3 id=&quot;tips&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="公考" scheme="https://levyya.github.io/categories/%E5%85%AC%E8%80%83/"/>
    
    
    <category term="公考" scheme="https://levyya.github.io/tags/%E5%85%AC%E8%80%83/"/>
    
    <category term="申论" scheme="https://levyya.github.io/tags/%E7%94%B3%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>QNLP--lambeq</title>
    <link href="https://levyya.github.io/2022/11/14/QNLP-lambeq/"/>
    <id>https://levyya.github.io/2022/11/14/QNLP-lambeq/</id>
    <published>2022-11-14T01:29:30.000Z</published>
    <updated>2023-01-10T12:35:16.124Z</updated>
    
    <content type="html"><![CDATA[<p>论文链接<br><a href="https://arxiv.org/abs/1003.4394">Mathematical Foundations for a Compositional Distributional Model of Meaning</a></p><h2 id="数学基础"><a href="#数学基础" class="headerlink" title="数学基础"></a>数学基础</h2><p><code>预群代数 </code>(the algebra of Pregroups): Lambek</p><blockquote><p>群：G为集合，G上有二元运算$\times: G \times G \to G$, 满足：结合律，存在单位元，存在逆元。</p></blockquote><p><code>布饶尔群</code> (Brauer group)：亦称代数类群，域F上有限中心单代数的相似代数类所构成的群。</p><p><code>中心单代数</code>：亦称正规单代数，若域F上代数A的中心是F本身，则称A为中心代数，中心是F的F单代数称为中心单代数。</p><p><code>部分序幺半群</code></p><p>n: noun</p><p>s: declarative statement, 陈述句</p><p>j: infinitive of the verb，动词不定式</p><p>$\sigma$: glueing type，粘合类型</p><h2 id="lambeq"><a href="#lambeq" class="headerlink" title="lambeq"></a>lambeq</h2><p>Lambeq是第一个用于量子自然语言处理的软件库，用于将短语转换为量子电路。量子计算社区已经使Lambeq开源，以造福全球社区，它正在迅速发展一个由开发者、学者、研究人员和用户组成的生态系统。QNLP库Lambeq与剑桥量子公司的TKET兼容顺畅，TKET也是开源的，被广泛用作软件开发平台。由于这个好处，QNLP的开发人员可以尽可能多地使用量子计算机。将自然语言集成到量子电路中并不是一件容易的事。Lambeq的初始过程是处理和解析一个句子。在统计组合类别语法(CCG)解析器的帮助下，为选定的组合模型生成语法树。字符串图是由解析树形成的，作为下一个流程[8]。字符串图以更详细的方式显示句子的语法结构。为了将这个字符串图作为语法结构存储和操作，QNLP库lambeq使用一个名为DisCoPy的python库作为后端数据库。这是基于在A节中讨论的DisCoCat模型。应用程序将重写规则用于这些字符串图的转换。应用于这些弦图的转换然后转换为实际的量子电路。通过剑桥量子计算机的TKET的输出可以引导到量子模拟器或量子计算机，而在经典情况下，用于优化的网络(张量网络)可以传递到ML库，如Jax或Pytorch。</p><img src="/2022/11/14/QNLP-lambeq/image-20221111212737521.png" alt="image-20221111212737521" style="zoom:200%;"><h3 id="处理过程"><a href="#处理过程" class="headerlink" title="处理过程"></a>处理过程</h3><ol><li><p>Parsing</p></li><li><p>DisCoCat implementation</p></li></ol><ul><li><p>Creation of DisCoCat Diagram</p><p>创建DisCoCat图:将DisCoCat图的生成可视化的一种简单方法是将每个单词表示为一种状态，然后用表示每个约简规则的连线将它们连接起来(表示两个表达式之间的语义等价)。</p></li><li><p>Rewriting</p><p>重写:在这个子步骤中，使用DisCoCat图作为参考，以获得可能的约简</p><p>在句子中。图的转换，如上图所示，使结构更紧凑，并提供计算优势。这里解释的重写是bigraph方法的简化版本。</p></li><li><p>Ansatz</p><p>Ansatz: 这是DisCoCat模型的最后一步，前面步骤创建的句子的DisCoCat表示被转换为量子电路。这种转换通过以下方式映射DisCoCat图来完成——(i)选择qn和qs作为每根类型为n和s的导线及其对偶类型要映射到的量子位的数量，(ii)为要替换的字态选择具体的参数化量子态。因此，Ansatz的选择决定了每个单词表示的参数数量，而电路的连通性则由语法的结构确定。</p></li></ul><ol start="3"><li>Quantum circuit interpretation</li></ol><p>​        量子电路解释：这是最后一步，根据系统中可用的门，量子电路被转换为一系列数学运算，然后这些运算在量子硬件上执行。为此，量子电路首先由量子编译器翻译成机器指令;这是通过考虑电路的数学解释以及作为硬件的可用门集和系统的拓扑结构来实现的。这些特定于机器的指令随后被传递到量子计算机上执行量子电路多次。这个过程的最后一步是得到相对频率的估计，以确定最终结果。这一步骤的详细说明超出了本文的范围。</p><h3 id="DisCocat"><a href="#DisCocat" class="headerlink" title="DisCocat"></a>DisCocat</h3><p>DisCoCat grammar model</p><ul><li>expresses both the meaning of words (distributional) and how words interact (compositional) to form a sentencec, and is based on a <strong>category-theoretic</strong> model</li><li>Incorporate the grammatical and linguistic structure of sentences</li></ul><p>参考：</p><p><a href="https://link.springer.com/chapter/10.1007/978-3-642-12821-9_3">Categories for the Practising Physicist</a></p><ul><li>categories theory</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;论文链接&lt;br&gt;&lt;a href=&quot;https://arxiv.org/abs/1003.4394&quot;&gt;Mathematical Foundations for a Compositional Distributional Model of Meaning&lt;/a&gt;&lt;/p&gt;
&lt;h</summary>
      
    
    
    
    <category term="量子计算" scheme="https://levyya.github.io/categories/%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="NLP" scheme="https://levyya.github.io/tags/NLP/"/>
    
    <category term="量子计算" scheme="https://levyya.github.io/tags/%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>电影--遥望南方的童年</title>
    <link href="https://levyya.github.io/2022/11/13/%E7%94%B5%E5%BD%B1-%E9%81%A5%E6%9C%9B%E5%8D%97%E6%96%B9%E7%9A%84%E7%AB%A5%E5%B9%B4/"/>
    <id>https://levyya.github.io/2022/11/13/%E7%94%B5%E5%BD%B1-%E9%81%A5%E6%9C%9B%E5%8D%97%E6%96%B9%E7%9A%84%E7%AB%A5%E5%B9%B4/</id>
    <published>2022-11-13T09:27:09.000Z</published>
    <updated>2023-01-10T12:35:16.607Z</updated>
    
    <content type="html"><![CDATA[<p>电影讲述了江西宜春教师易明堂创办启明星幼儿园的故事，呈现了以砣砣、秀秀为例的农村留守儿童，他们的童年在遥望南方中度过。江西农村里的年轻人为了生计大多前往深圳打工，他们的小孩只能留给老人照看或者寄养在邻居家里，成为留守儿童。</p><p>电影主人公易明堂从师范学院毕业，在乡村的小学教书，一个月仅收入千元，因为收入还遭到没文化的同乡嘲笑。易老师想在村里创办幼儿园，却受到多方面的阻碍，乡教办认为他的幼儿园不达标，易老师的妻子作为教师没有幼师资格证，也没有接送小孩的专车，村里部分人认为他办幼儿园是为了骗小孩子的钱，招生过程也是十分艰难，第一天接收了15个小孩，每位仅收60元，要包接送还要管饭，不少家长还拖欠学费，入不敷出。片中还介绍了16岁的女孩李响，为了实现自己当歌星的梦想，想去深圳打工赚钱参加比赛选秀，结果被父亲从火车站抓回，后面成为易老师幼儿园里的音乐老师。开学不久，没有教学经验的李响因为冤枉了砣砣差点酿成大祸，她为自己的错误感到深深的懊悔，于是向易老师辞去老师的工作，想要回到学堂读书并考取师范学校，成为一名真正的老师。</p><p>这部电影讲述的太真实了，江西农村里有太多的留守儿童，父母要么一方外出打工，另一位照看孩子，要么双方都出去，留给爷爷奶奶外公外婆，孩子一年能见父母的日子屈指可数，更不用说对孩子进行素质教育。看完电影的最大感受就是心酸，这部电影就像评论中所说的，简直像一部纪录片。很多人说片中的小孩演技吊打小鲜肉，可是大家别忘了，影视来源于生活，有些事情就是现实，无需刻意表演。</p><hr><p><a href="https://www.bilibili.com/video/BV1JV4y1T7SS/?spm_id_from=333.1007.tianma.1-2-2.click&vd_source=53b8cc6488ce514ed3a9458e8e4f939a">在人间–华农兄弟</a></p><p>看完华农在农村的经历后，又有另一番感触……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;电影讲述了江西宜春教师易明堂创办启明星幼儿园的故事，呈现了以砣砣、秀秀为例的农村留守儿童，他们的童年在遥望南方中度过。江西农村里的年轻人为了生计大多前往深圳打工，他们的小孩只能留给老人照看或者寄养在邻居家里，成为留守儿童。&lt;/p&gt;
&lt;p&gt;电影主人公易明堂从师范学院毕业，在乡</summary>
      
    
    
    
    <category term="电影" scheme="https://levyya.github.io/categories/%E7%94%B5%E5%BD%B1/"/>
    
    
    <category term="电影" scheme="https://levyya.github.io/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>英语--The nights</title>
    <link href="https://levyya.github.io/2022/11/11/%E8%8B%B1%E8%AF%AD-The-nights/"/>
    <id>https://levyya.github.io/2022/11/11/%E8%8B%B1%E8%AF%AD-The-nights/</id>
    <published>2022-11-11T13:38:11.000Z</published>
    <updated>2023-01-10T12:35:54.243Z</updated>
    
    <content type="html"><![CDATA[<div style="font-size:20px"><p>Hey, once upon a younger year</p><p>When all our shadows disappeared</p><p>The animals inside came out to play</p><p>Hey, went face to face with all our fears</p><p>Learned our lessons through the tears</p><p>Made memories we knew would never fade</p><p>One day my father – he told me </p><p>“Son, don’t let it slip away.”</p><p>He took me in his arms, I heard him say,</p><p>“When you get older</p><p>Your wild heart will live for younger days</p><p>Think of me if ever you’re afraid.”</p><p>He said, “One day you’ll leave  this world behind</p><p>So live a life you will remember.”</p><p>My father told me when I was just a child</p><p>These are the nights that never die</p><p>My father told me</p><p>When thunder coulds start pouring down</p><p>Light a fire they can’t put out</p><p>Carve your name into those shining stars</p><p>He said, “Go venture far beyond these shores.</p><p>Don’t forsake this life of yours</p><p>I’ll guide you home no matter where you are.””</p><p>One day my father – he tole me</p><p>“Son, don’t let it slip away.”</p><p>When I was just a kid I heard him say,</p><p>“When you get older</p><p>Your wild heart will live for younger days</p><p>Think of me if ever you’re afraid.”</p><p>He said, “One day you’ll leave this world behind</p><p>So live a life you will remember.”</p><p>My father told me when I was just a child</p><p>These are the nights that never die</p><p>My father told me</p><p>These are the nights that never die</p><p>My father told me</p><p>Hey, hey<br> </p></div><p></p>]]></content>
    
    
      
      
    <summary type="html">&lt;div style=&quot;font-size:20px&quot;&gt;

&lt;p&gt;Hey, once upon a younger year&lt;/p&gt;
&lt;p&gt;When all our shadows disappeared&lt;/p&gt;
&lt;p&gt;The animals inside came out to</summary>
      
    
    
    
    <category term="英语" scheme="https://levyya.github.io/categories/%E8%8B%B1%E8%AF%AD/"/>
    
    
    <category term="英语" scheme="https://levyya.github.io/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>Go</title>
    <link href="https://levyya.github.io/2022/10/18/Go/"/>
    <id>https://levyya.github.io/2022/10/18/Go/</id>
    <published>2022-10-18T08:59:11.000Z</published>
    <updated>2023-01-10T12:35:15.690Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://go.dev/play/">Go在线运行</a></p><p><a href="http://books.studygolang.com/gopl-zh/">Go语言圣经</a></p><p><a href="http://books.studygolang.com/#">Go语言中文网</a></p><p><a href="http://books.studygolang.com/#">Go语言高级编程</a></p><h2 id="入门7"><a href="#入门7" class="headerlink" title="入门7"></a>入门7</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> run helloworld.<span class="keyword">go</span></span><br><span class="line"><span class="keyword">go</span> build helloworld.<span class="keyword">go</span></span><br></pre></td></tr></table></figure><h2 id="Goroutines-和-Channels"><a href="#Goroutines-和-Channels" class="headerlink" title="Goroutines 和 Channels"></a>Goroutines 和 Channels</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://go.dev/play/&quot;&gt;Go在线运行&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http</summary>
      
    
    
    
    
    <category term="Go" scheme="https://levyya.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>LeetCodeWithVSC</title>
    <link href="https://levyya.github.io/2022/10/14/LeetCodeWithVSC/"/>
    <id>https://levyya.github.io/2022/10/14/LeetCodeWithVSC/</id>
    <published>2022-10-14T05:23:27.000Z</published>
    <updated>2023-01-10T12:35:15.820Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/LeetCode-OpenSource/vscode-leetcode">官方</a></p><ul><li>安装VS Code LeetCode插件</li><li>登录账号</li><li>设置代码错误提示<ul><li>setting -&gt; C_Cpp: Error Squiggles</li></ul></li></ul><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>1014</p><ul><li><p><input checked disabled type="checkbox"> </p><h4 id="124-二叉树中的最大路径和"><a href="#124-二叉树中的最大路径和" class="headerlink" title="124. 二叉树中的最大路径和"></a><a href="https://leetcode.cn/problems/binary-tree-maximum-path-sum/">124. 二叉树中的最大路径和</a></h4><ul><li><input disabled type="checkbox"> review</li><li><input disabled type="checkbox"> 递归</li></ul></li><li><p><input checked disabled type="checkbox"> </p><h4 id="395-至少有-K-个重复字符的最长子串"><a href="#395-至少有-K-个重复字符的最长子串" class="headerlink" title="395. 至少有 K 个重复字符的最长子串"></a><a href="https://leetcode.cn/problems/longest-substring-with-at-least-k-repeating-characters/">395. 至少有 K 个重复字符的最长子串</a></h4><ul><li><input disabled type="checkbox"> review</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/LeetCode-OpenSource/vscode-leetcode&quot;&gt;官方&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装VS Code LeetCode插件&lt;/li&gt;
&lt;li&gt;登录账号&lt;/li&gt;
&lt;li&gt;设置代码错误提示</summary>
      
    
    
    
    <category term="计算机" scheme="https://levyya.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="LeetCode" scheme="https://levyya.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="https://levyya.github.io/tags/LeetCode/"/>
    
    <category term="OJ" scheme="https://levyya.github.io/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>量子计算</title>
    <link href="https://levyya.github.io/2022/10/13/%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97/"/>
    <id>https://levyya.github.io/2022/10/13/%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97/</id>
    <published>2022-10-13T13:10:22.000Z</published>
    <updated>2023-01-10T12:35:54.423Z</updated>
    
    <content type="html"><![CDATA[<h2 id="量子计算"><a href="#量子计算" class="headerlink" title="量子计算"></a>量子计算</h2><p>纯态：纯粹的量子态，不仅具有概率，还具有相位（量子相干性）。<br>$$<br>\rho &#x3D; |\psi\rangle \langle\psi|<br>$$<br>混合态：纯态的概率性叠加，失去了部分或者全部的相位信息<br>$$<br>\rho &#x3D; \sum_i P_i |\psi_i\rangle \langle\psi_i|<br>$$</p><p><a href="https://qcloud.originqc.com.cn/documentCenter">本源量子云文档</a></p><p>Nielsen, M. A. &amp; Chuang, I. L. Quantum computation and quantum information. (2010).</p><p>Biamonte, J. et al. Quantum machine learning. Nature 549, 195–202 (2017).</p><ul><li>QPCA</li><li>QSVM</li><li>HHL</li><li>量子退火</li><li>量子玻尔兹曼机</li></ul><p><a href="https://iopscience.iop.org/article/10.1088/2058-9565/ab4eb5">Benedetti, M., Lloyd, E., Sack, S. &amp; Fiorentini, M. Parameterized quantum circuits as machine learning models. Quantum Sci. Technol. 4, 043001 (2019).</a></p><ul><li>PQC</li><li>VQE: Hamiltonian</li><li>QAOA: MaxCut</li></ul><h2 id="量子计算机"><a href="#量子计算机" class="headerlink" title="量子计算机"></a>量子计算机</h2><p>物理实现方式：囚禁离子阱、超导、核磁共振、光量子</p><h3 id="超导"><a href="#超导" class="headerlink" title="超导"></a>超导</h3><p>超导量子电路的基本元器件包括<strong>电容、电感、约瑟夫森结</strong>，其中电容和电感为线性器件，约瑟夫森结提供非线性。约瑟夫森结通常由两个超导层间隔一层绝缘层实现，只要中间的绝缘层足够薄，两侧超导体的库伯对之间仍然存在相互作用。</p><h2 id="量子计算理论"><a href="#量子计算理论" class="headerlink" title="量子计算理论"></a>量子计算理论</h2><p>量子比特</p><p>量子门</p><p>单量子门：H门，相位门，Pauli门</p><p>多量子门：CZ门，CNOT门，Toffoli门</p><p>量子线路</p><p>量子态的演化本质上可以看作态矢对应的向量做矩阵的乘法，得到的向量即表示演化后的量子态。</p><h2 id="量子计算云平台"><a href="#量子计算云平台" class="headerlink" title="量子计算云平台"></a>量子计算云平台</h2><p>[1]魏璐,马钟,刘倩玉.量子计算模拟平台发展综述[J].微电子学与计算机,2022,39(11):1-10.DOI:10.19304&#x2F;J.ISSN1000-7180.2021.0309.</p><p>Deutsch 1985年提出量子图灵机的概念，提出了量子门集合以及量子线路的基本模型。目前的量子算法都是通过量子门构成量子线路进行描述。量子模拟平台运行量子算法的过程，是指生成若干量子比特，对量子比特构成的态空间通过一系列量子门构成的量子线路进行状态演化，最终对演化后的状态进行测量，得到测量的结果。</p><h3 id="量子云服务模拟平台"><a href="#量子云服务模拟平台" class="headerlink" title="量子云服务模拟平台"></a>量子云服务模拟平台</h3><p>华为HiQ</p><p>本源：量子模拟器Emuware，量子编程框架QPanda，量子编程语言QRunes，超导量子计算机–悟源（6比特）</p><p>量子模拟器分类</p><ol><li>单振幅量子虚拟机</li><li>部分振幅量子虚拟机</li><li>全振幅量子虚拟机</li><li>含噪声量子虚拟机</li></ol><p>百度：量桨，量子机器学习开发套件</p><p>阿里巴巴：太章</p><h3 id="本地运行的量子计算模拟平台"><a href="#本地运行的量子计算模拟平台" class="headerlink" title="本地运行的量子计算模拟平台"></a>本地运行的量子计算模拟平台</h3><p>阿联酋阿布扎比大学和巴塞罗那大学：Qibo，支持VQE、QAOA、QFT</p><p>牛津大学：Quest量子模拟器</p><p>亚马逊：Braket，D-Wave公司的量子退火计算机，IonQ公司的离子阱量子计算机，Rigetti公司超导量子计算机</p><p>Xanadu：光量子云平台，可以在室温下运行</p><p>微软：Azure Quantum</p><p>IBM：IBMQ Experience</p><hr><p>量子模拟器：Cirq，TFQ，Qiskit，PyQuil，Quest</p><h3 id="后端支持真实量子计算机的量子云平台"><a href="#后端支持真实量子计算机的量子云平台" class="headerlink" title="后端支持真实量子计算机的量子云平台"></a>后端支持真实量子计算机的量子云平台</h3><p><a href="https://qml.baidu.com/tutorials/overview.html">量桨</a></p><p>[1] Wang, Youle, Guangxi Li, and Xin Wang. “Variational quantum Gibbs state preparation with a truncated Taylor series.” Physical Review Applied 16.5 (2021): 054035. [<a href="https://arxiv.org/pdf/2005.08797.pdf">pdf</a>]</p><ul><li>Gibbs 制备</li></ul><p>[2] Wang, Xin, Zhixin Song, and Youle Wang. “Variational quantum singular value decomposition.” Quantum 5 (2021): 483. [<a href="https://arxiv.org/pdf/2006.02336.pdf">pdf</a>]</p><ul><li>变分奇异值分解</li></ul><p>[3] Li, Guangxi, Zhixin Song, and Xin Wang. “VSQL: Variational Shadow Quantum Learning for Classification.” Proceedings of the AAAI Conference on Artificial Intelligence. Vol. 35. No. 9. 2021. [<a href="https://arxiv.org/pdf/2012.08288.pdf">pdf]</a></p><ul><li>分类</li></ul><p>[4] Chen, Ranyiliu, et al. “Variational quantum algorithms for trace distance and fidelity estimation.” Quantum Science and Technology (2021). [<a href="https://arxiv.org/pdf/2012.05768.pdf">pdf]</a></p><ul><li>trace distance &amp; 保真度估计</li></ul><p>[5] Wang, Kun, et al. “Detecting and quantifying entanglement on near-term quantum devices.” arXiv preprint arXiv:2012.14311 (2020). [<a href="https://arxiv.org/pdf/2012.14311.pdf">pdf]</a></p><ul><li>纠缠</li></ul><p>[6] Zhao, Xuanqiang, et al. “Practical distributed quantum information processing with LOCCNet.” npj Quantum Information 7.1 (2021): 1-7. [<a href="https://arxiv.org/pdf/2101.12190.pdf">pdf]</a></p><ul><li>量子信息处理</li></ul><p>[7] Cao, Chenfeng, and Xin Wang. “Noise-Assisted Quantum Autoencoder.” Physical Review Applied 15.5 (2021): 054012. [<a href="https://journals.aps.org/prapplied/abstract/10.1103/PhysRevApplied.15.054012">pdf]</a></p><ul><li>量子编码器</li></ul><p><a href="https://www.mindspore.cn/mindquantum/docs/zh-CN/master/index.html">昇思Mindspore</a></p><h2 id="QNLP"><a href="#QNLP" class="headerlink" title="QNLP"></a>QNLP</h2><p><code>lambeq </code></p><p>Lambeq是第一个用于量子自然语言处理的软件库，用于将短语转换为量子电路。量子计算社区已经使Lambeq开源，以造福全球社区，它正在迅速发展一个由开发者、学者、研究人员和用户组成的生态系统。QNLP库Lambeq与剑桥量子公司的TKET兼容顺畅，TKET也是开源的，被广泛用作软件开发平台。由于这个好处，QNLP的开发人员可以尽可能多地使用量子计算机。将自然语言集成到量子电路中并不是一件容易的事。Lambeq的初始过程是处理和解析一个句子。在统计组合类别语法(CCG)解析器的帮助下，为选定的组合模型生成语法树。字符串图是由解析树形成的，作为下一个流程[8]。字符串图以更详细的方式显示句子的语法结构。为了将这个字符串图作为语法结构存储和操作，QNLP库lambeq使用一个名为DisCoPy的python库作为后端数据库。这是基于在A节中讨论的DisCoCat模型。应用程序将重写规则用于这些字符串图的转换。应用于这些弦图的转换然后转换为实际的量子电路。通过剑桥量子计算机的TKET的输出可以引导到量子模拟器或量子计算机，而在经典情况下，用于优化的网络(张量网络)可以传递到ML库，如Jax或Pytorch。</p><img src="/2022/10/13/%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97/image-20221111212737521.png" alt="image-20221111212737521" style="zoom:200%;"><ol><li><p>Parsing</p></li><li><p>DisCoCat implementation</p></li></ol><ul><li><p>Creation of DisCoCat Diagram</p><p>创建DisCoCat图:将DisCoCat图的生成可视化的一种简单方法是将每个单词表示为一种状态，然后用表示每个约简规则的连线将它们连接起来(表示两个表达式之间的语义等价)。</p></li><li><p>Rewriting</p><p>重写:在这个子步骤中，使用DisCoCat图作为参考，以获得可能的约简</p><p>在句子中。图的转换，如上图所示，使结构更紧凑，并提供计算优势。这里解释的重写是bigraph方法的简化版本。</p></li><li><p>Ansatz</p><p>Ansatz:这是DisCoCat模型的最后一步，前面步骤创建的句子的DisCoCat表示被转换为量子电路。这种转换通过以下方式映射DisCoCat图来完成——(i)选择qn和qs作为每根类型为n和s的导线及其对偶类型要映射到的量子位的数量，(ii)为要替换的字态选择具体的参数化量子态。因此，Ansatz的选择决定了每个单词表示的参数数量，而电路的连通性则由语法的结构确定。</p></li></ul><ol start="3"><li>Quantum circuit interpretation</li></ol><p>​        量子电路解释:这是最后一步，根据系统中可用的门，量子电路被转换为一系列数学运算，然后这些运算在量子硬件上执行。为此，量子电路首先由量子编译器翻译成机器指令;这是通过考虑电路的数学解释以及作为硬件的可用门集和系统的拓扑结构来实现的。这些特定于机器的指令随后被传递到量子计算机上执行量子电路多次。这个过程的最后一步是得到相对频率的估计，以确定最终结果。这一步骤的详细说明超出了本文的范围。</p><p><code>Tensorflow Quantum</code></p><p>另一个使用NISQ(噪声中间尺度量子)处理器的框架是Tensorflow Quantum (TFQ)。它是开源的，用于开发混合量子经典ML模型。它专注于量子数据，并集成了量子算法、张量流api和量子模拟器。引入了较新的算法，如QNN(量子神经网络)和PQM(参数化量子电路)。TFQ可以统一经典和量子ML基础结构，因为从根本上说电路是张量，使用Cirq结构我们可以生成这些张量。因此，我们可以无缝地将量子电路转换为与TensorFlow数据结构兼容的张量。TFQ的目标是连接两个领域:机器学习和量子计算。Cirq是一个框架，它使我们能够在短期设备的量子电路上工作&amp;也有助于为NISQ机器制作算法。正如[9]中提到的，TFQ与Qsim结合，有时与GPU结合，在计算上比Cirq快得多。</p><img src="/2022/10/13/%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97/image-20221111212854073.png" alt="image-20221111212854073" style="zoom:67%;"><h2 id="相关文献"><a href="#相关文献" class="headerlink" title="相关文献"></a>相关文献</h2><p>Quantum Generative Training Using Renyi Divergences</p><p>内容：</p><ul><li>a training algorithm that minimizeds the maximal Renyi divergence of order two</li><li>thermal state learning and Hamiltonian learning</li></ul><p><a href="https://arxiv.org/abs/2205.06409">Design and Implementation of a Quantum Kernel for Natural Language Processing</a><br>内容</p><ol><li>使用lambeq处理NLP分类任务（科技、食物二分类）</li><li>利用DisCoCat模型设计一种量子核函数</li><li>两种相似度测量：transition amplitude approach and SWAP test</li></ol><p>意义：</p><ol><li>构造了一组17词、100句组成的简单数据级</li><li>有<a href="https://github.com/mattwright99/thesis">开源代码</a></li></ol><p><a href="https://arxiv.org/abs/1003.4394">Mathematical Foundations for a Compositional Distributional Model of Meaning</a></p><p>内容</p><ol><li>DisCoCat</li></ol><h2 id="量子应用"><a href="#量子应用" class="headerlink" title="量子应用"></a>量子应用</h2><p><strong>量子机器学习QNN</strong></p><p>量子化学模拟VQE</p><p>量子优化算法QAOA</p><p><code>施特恩－格拉赫实验</code></p><h2 id="我的工作"><a href="#我的工作" class="headerlink" title="我的工作"></a>我的工作</h2><p>方向</p><ol><li>改任务</li><li>改模型</li><li>加量子线路</li></ol><p>量子机器学习</p><p>参考书籍：</p><p><a href="https://link.springer.com/book/10.1007/978-3-030-83274-2">Quantum Computing: An Applied Approach</a></p><p>Dancing with Qubits</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;量子计算&quot;&gt;&lt;a href=&quot;#量子计算&quot; class=&quot;headerlink&quot; title=&quot;量子计算&quot;&gt;&lt;/a&gt;量子计算&lt;/h2&gt;&lt;p&gt;纯态：纯粹的量子态，不仅具有概率，还具有相位（量子相干性）。&lt;br&gt;$$&lt;br&gt;\rho &amp;#x3D; |\psi\rang</summary>
      
    
    
    
    <category term="量子计算" scheme="https://levyya.github.io/categories/%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="Quantum" scheme="https://levyya.github.io/tags/Quantum/"/>
    
    <category term="量子计算" scheme="https://levyya.github.io/tags/%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
</feed>
